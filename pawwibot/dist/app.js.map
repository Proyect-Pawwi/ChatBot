{"version":3,"file":"app.js","sources":["../src/services/send-template.ts","../src/services/send-text.ts","../src/services/mongo.ts","../src/services/airtable-leads.ts","../src/services/airtable-paseos.ts","../src/services/airtable-completados.ts","../src/template/mainFlow.ts","../src/template/index.ts","../src/config/index.ts","../src/provider/index.ts","../src/app.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport dotenv from \"dotenv\";\r\ndotenv.config();\r\n\r\nexport async function TEMPLATE_bienvenida_pawwi(to, name = \"amigo\") {\r\n  const token = process.env.jwtToken;\r\n  const phone_number_id = process.env.numberId;\r\n\r\n  const body = {\r\n    messaging_product: \"whatsapp\",\r\n    to,\r\n    type: \"template\",\r\n    template: {\r\n      name: \"bienvenida_pawwi\",\r\n      language: { code: \"es\" },\r\n      components: [\r\n        {\r\n          type: \"body\",\r\n          parameters: [\r\n            { type: \"text\", text: name } // Reemplaza {{1}} de la plantilla\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `https://graph.facebook.com/v19.0/${phone_number_id}/messages`,\r\n      body,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      }\r\n    );\r\n\r\n    console.log(\"✅ Plantilla enviada:\", res.data);\r\n  } catch (err) {\r\n    console.error(\"❌ Error al enviar plantilla:\", err.response?.data || err);\r\n  }\r\n}\r\n\r\nexport async function TEMPLATE_registro_nombre_perrito(to) {\r\n  const token = process.env.jwtToken;\r\n  const phone_number_id = process.env.numberId;\r\n\r\n  const body = {\r\n    messaging_product: \"whatsapp\",\r\n    to,\r\n    type: \"template\",\r\n    template: {\r\n      name: \"registro_nombre_perrito\", // This is the name of your template on Meta/WhatsApp Business\r\n      language: { code: \"es\" }\r\n      // No 'components' array needed for parameters if the template has no placeholders or buttons\r\n      // No 'buttons' property needed as per your request\r\n    }\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `https://graph.facebook.com/v19.0/${phone_number_id}/messages`,\r\n      body,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      }\r\n    );\r\n\r\n    console.log(\"✅ Plantilla 'registro_nombre_perrito' enviada:\", res.data);\r\n  } catch (err) {\r\n    console.error(\"❌ Error al enviar plantilla 'registro_nombre_perrito':\", err.response?.data || err);\r\n  }\r\n}\r\n\r\nexport async function TEMPLATE_registro_raza_perrito(to, dogName) {\r\n  const token = process.env.jwtToken;\r\n  const phone_number_id = process.env.numberId;\r\n\r\n  const body = {\r\n    messaging_product: \"whatsapp\",\r\n    to,\r\n    type: \"template\",\r\n    template: {\r\n      name: \"registro_raza_perrito\", // Make sure this matches your approved template name\r\n      language: { code: \"es\" },\r\n      components: [\r\n        {\r\n          type: \"body\",\r\n          parameters: [\r\n            { type: \"text\", text: dogName } // Replaces {{1}} in the template with the dog's name\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `https://graph.facebook.com/v19.0/${phone_number_id}/messages`,\r\n      body,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      }\r\n    );\r\n\r\n    console.log(\"✅ Plantilla 'registro_raza_perrito' enviada:\", res.data);\r\n  } catch (err) {\r\n    console.error(\"❌ Error al enviar plantilla 'registro_raza_perrito':\", err.response?.data || err);\r\n  }\r\n}\r\n\r\nexport async function TEMPLATE_registro_edad_perrito(to, dogName) {\r\n  const token = process.env.jwtToken;\r\n  const phone_number_id = process.env.numberId;\r\n\r\n  const body = {\r\n    messaging_product: \"whatsapp\",\r\n    to,\r\n    type: \"template\",\r\n    template: {\r\n      name: \"registro_edad_perrito\", // Asegúrate de que este nombre coincida con tu plantilla aprobada\r\n      language: { code: \"es\" },\r\n      components: [\r\n        {\r\n          type: \"body\",\r\n          parameters: [\r\n            { type: \"text\", text: dogName } // Reemplaza {{1}} de la plantilla con el nombre del perrito\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `https://graph.facebook.com/v19.0/${phone_number_id}/messages`,\r\n      body,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      }\r\n    );\r\n\r\n    console.log(\"✅ Plantilla 'registro_edad_perrito' enviada:\", res.data);\r\n  } catch (err) {\r\n    console.error(\"❌ Error al enviar plantilla 'registro_edad_perrito':\", err.response?.data || err);\r\n  }\r\n}\r\n\r\nexport async function TEMPLATE_registro_consideraciones_perrito(to, dogName) {\r\n  const token = process.env.jwtToken;\r\n  const phone_number_id = process.env.numberId;\r\n\r\n  const body = {\r\n    messaging_product: \"whatsapp\",\r\n    to,\r\n    type: \"template\",\r\n    template: {\r\n      name: \"registro_consideraciones_perrito\", // Asegúrate de que este nombre coincida con tu plantilla aprobada\r\n      language: { code: \"es\" },\r\n      components: [\r\n        {\r\n          type: \"body\",\r\n          parameters: [\r\n            { type: \"text\", text: dogName } // Reemplaza {{1}} de la plantilla con el nombre del perrito\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `https://graph.facebook.com/v19.0/${phone_number_id}/messages`,\r\n      body,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      }\r\n    );\r\n\r\n    console.log(\"✅ Plantilla 'registro_consideraciones_perrito' enviada:\", res.data);\r\n  } catch (err) {\r\n    console.error(\"❌ Error al enviar plantilla 'registro_consideraciones_perrito':\", err.response?.data || err);\r\n  }\r\n}\r\n\r\nexport async function TEMPLATE_registro_vacunas_perrito(to, dogName) {\r\n  const token = process.env.jwtToken;\r\n  const phone_number_id = process.env.numberId;\r\n\r\n  const body = {\r\n    messaging_product: \"whatsapp\",\r\n    to,\r\n    type: \"template\",\r\n    template: {\r\n      name: \"registro_vacunas_perrito\", // Asegúrate de que este nombre coincida con tu plantilla aprobada\r\n      language: { code: \"es\" },\r\n      components: [\r\n        {\r\n          type: \"body\",\r\n          parameters: [\r\n            { type: \"text\", text: dogName } // Reemplaza {{1}} de la plantilla con el nombre del perrito\r\n          ]\r\n        },\r\n        {\r\n          type: \"button\",\r\n          sub_type: \"quick_reply\",\r\n          index: 0,\r\n          parameters: [{ type: \"payload\", payload: \"VACUNAS_SI\" }] // Payload para \"Sí, todas al día\"\r\n        },\r\n        {\r\n          type: \"button\",\r\n          sub_type: \"quick_reply\",\r\n          index: 1,\r\n          parameters: [{ type: \"payload\", payload: \"VACUNAS_NO\" }] // Payload para \"Aún no\"\r\n        }\r\n      ]\r\n    }\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `https://graph.facebook.com/v19.0/${phone_number_id}/messages`,\r\n      body,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      }\r\n    );\r\n\r\n    console.log(\"✅ Plantilla 'registro_vacunas_perrito' enviada:\", res.data);\r\n  } catch (err) {\r\n    console.error(\"❌ Error al enviar plantilla 'registro_vacunas_perrito':\", err.response?.data || err);\r\n  }\r\n}\r\n\r\nexport async function TEMPLATE_registro_agendar_paseo(to, dogName) {\r\n  const token = process.env.jwtToken;\r\n  const phone_number_id = process.env.numberId;\r\n\r\n  const body = {\r\n    messaging_product: \"whatsapp\",\r\n    to,\r\n    type: \"template\",\r\n    template: {\r\n      name: \"registro_agendar_paseo\", // Asegúrate de que este nombre coincida con tu plantilla aprobada\r\n      language: { code: \"es\" },\r\n      components: [\r\n        {\r\n          type: \"body\",\r\n          parameters: [\r\n            { type: \"text\", text: dogName } // Reemplaza {{1}} de la plantilla con el nombre del perrito\r\n          ]\r\n        },\r\n        {\r\n          type: \"button\",\r\n          sub_type: \"quick_reply\",\r\n          index: 0,\r\n          parameters: [{ type: \"payload\", payload: \"AGENDAR_PASEO_SI\" }] // Payload para \"Sí, agendar paseo\"\r\n        },\r\n        {\r\n          type: \"button\",\r\n          sub_type: \"quick_reply\",\r\n          index: 1,\r\n          parameters: [{ type: \"payload\", payload: \"AGENDAR_PASEO_MAS_TARDE\" }] // Payload para \"Más tarde\"\r\n        }\r\n      ]\r\n    }\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `https://graph.facebook.com/v19.0/${phone_number_id}/messages`,\r\n      body,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      }\r\n    );\r\n\r\n    console.log(\"✅ Plantilla 'registro_agendar_paseo' enviada:\", res.data);\r\n  } catch (err) {\r\n    console.error(\"❌ Error al enviar plantilla 'registro_agendar_paseo':\", err.response?.data || err);\r\n  }\r\n}\r\n\r\nexport async function TEMPLATE_agendar_tipo_paseo(to, dogName = \"tu perrito\") {\r\n  const token = process.env.jwtToken;\r\n  const phone_number_id = process.env.numberId;\r\n\r\n  const body = {\r\n    messaging_product: \"whatsapp\",\r\n    to,\r\n    type: \"template\",\r\n    template: {\r\n      name: \"agendar_tipo_paseo\", // Debe coincidir exactamente con el nombre en Meta\r\n      language: { code: \"es\" },\r\n      components: [\r\n        {\r\n          type: \"body\",\r\n          parameters: [\r\n            { type: \"text\", text: dogName } // Reemplaza {{1}} en la plantilla\r\n          ]\r\n        },\r\n        {\r\n          type: \"button\",\r\n          sub_type: \"quick_reply\",\r\n          index: 0,\r\n          parameters: [\r\n            { type: \"payload\", payload: \"FLASH_15_MIN\" } // Payload del botón 1: Flash\r\n          ]\r\n        },\r\n        {\r\n          type: \"button\",\r\n          sub_type: \"quick_reply\",\r\n          index: 1,\r\n          parameters: [\r\n            { type: \"payload\", payload: \"CHILL_30_MIN\" } // Payload del botón 2: Chill\r\n          ]\r\n        },\r\n        {\r\n          type: \"button\",\r\n          sub_type: \"quick_reply\",\r\n          index: 2,\r\n          parameters: [\r\n            { type: \"payload\", payload: \"ADVENTURE_1_HORA\" } // Payload del botón 3: Adventure\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `https://graph.facebook.com/v19.0/${phone_number_id}/messages`,\r\n      body,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      }\r\n    );\r\n\r\n    console.log(\"✅ Plantilla 'agendar_tipo_paseo' enviada:\", res.data);\r\n  } catch (err) {\r\n    console.error(\"❌ Error al enviar plantilla 'agendar_tipo_paseo':\", err.response?.data || err);\r\n  }\r\n}\r\n\r\n\r\nexport async function TEMPLATE_agendar_fecha_paseo(to, dogName = \"tu perrito\") {\r\n  const token = process.env.jwtToken;\r\n  const phone_number_id = process.env.numberId;\r\n\r\n  const body = {\r\n    messaging_product: \"whatsapp\",\r\n    to,\r\n    type: \"template\",\r\n    template: {\r\n      name: \"agendar_fecha_paseo\", // Nombre exacto en Meta\r\n      language: { code: \"es\" },\r\n      components: [\r\n        {\r\n          type: \"body\",\r\n          parameters: [\r\n            { type: \"text\", text: dogName } // Reemplaza {{1}} con nombre del perrito\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `https://graph.facebook.com/v19.0/${phone_number_id}/messages`,\r\n      body,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      }\r\n    );\r\n\r\n    console.log(\"✅ Plantilla 'agendar_fecha_paseo' enviada:\", res.data);\r\n  } catch (err) {\r\n    console.error(\"❌ Error al enviar plantilla 'agendar_fecha_paseo':\", err.response?.data || err);\r\n  }\r\n}\r\n\r\nexport async function TEMPLATE_ragendar_hora_paseo(to, dogName = \"tu perrito\") {\r\n  const token = process.env.jwtToken;\r\n  const phone_number_id = process.env.numberId;\r\n\r\n  const body = {\r\n    messaging_product: \"whatsapp\",\r\n    to,\r\n    type: \"template\",\r\n    template: {\r\n      name: \"agendar_hora_paseo\", // Asegúrate que el nombre coincida con la plantilla aprobada\r\n      language: { code: \"es\" },\r\n      components: [\r\n        {\r\n          type: \"body\",\r\n          parameters: [\r\n            { type: \"text\", text: dogName } // Reemplaza {{1}} con el nombre del perrito\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `https://graph.facebook.com/v19.0/${phone_number_id}/messages`,\r\n      body,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      }\r\n    );\r\n\r\n    console.log(\"✅ Plantilla 'ragendar_hora_paseo' enviada:\", res.data);\r\n  } catch (err) {\r\n    console.error(\"❌ Error al enviar plantilla 'ragendar_hora_paseo':\", err.response?.data || err);\r\n  }\r\n}\r\n\r\nexport async function TEMPLATE_agendar_metodo_pago(to, dogName = \"tu perrito\") {\r\n  const token = process.env.jwtToken;\r\n  const phone_number_id = process.env.numberId;\r\n\r\n  const body = {\r\n    messaging_product: \"whatsapp\",\r\n    to,\r\n    type: \"template\",\r\n    template: {\r\n      name: \"agendar_metodo_pago\", // Debe coincidir con el nombre aprobado en Meta\r\n      language: { code: \"es\" },\r\n      components: [\r\n        {\r\n          type: \"body\",\r\n          parameters: [\r\n            { type: \"text\", text: dogName } // Reemplaza {{1}} con el nombre del perrito\r\n          ]\r\n        },\r\n        {\r\n          type: \"button\",\r\n          sub_type: \"quick_reply\",\r\n          index: 0,\r\n          parameters: [{ type: \"payload\", payload: \"METODO_PAGO_NEQUI\" }]\r\n        },\r\n        {\r\n          type: \"button\",\r\n          sub_type: \"quick_reply\",\r\n          index: 1,\r\n          parameters: [{ type: \"payload\", payload: \"METODO_PAGO_LINK_BOLD\" }]\r\n        },\r\n        {\r\n          type: \"button\",\r\n          sub_type: \"quick_reply\",\r\n          index: 2,\r\n          parameters: [{ type: \"payload\", payload: \"METODO_PAGO_EFECTIVO\" }]\r\n        }\r\n      ]\r\n    }\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `https://graph.facebook.com/v19.0/${phone_number_id}/messages`,\r\n      body,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      }\r\n    );\r\n\r\n    console.log(\"✅ Plantilla 'agendar_metodo_pago' enviada:\", res.data);\r\n  } catch (err) {\r\n    console.error(\"❌ Error al enviar plantilla 'agendar_metodo_pago':\", err.response?.data || err);\r\n  }\r\n}\r\n\r\nexport async function TEMPLATE_agendar_resumen_paseo(\r\n  to,\r\n  {\r\n    dogName = 'tu perrito',\r\n    calle = 'Calle no especificada',\r\n    colonia = 'Colonia no especificada',\r\n    fecha = 'Fecha no definida',\r\n    hora = 'Hora no definida',\r\n    tipoPaseo = 'Tipo no definido',\r\n    precio = '$0',\r\n    metodoPago = 'No definido'\r\n  }\r\n) {\r\n  const token = process.env.jwtToken;\r\n  const phone_number_id = process.env.numberId;\r\n\r\n  const body = {\r\n    messaging_product: \"whatsapp\",\r\n    to,\r\n    type: \"template\",\r\n    template: {\r\n      name: \"agendar_resumen_paseo\",\r\n      language: { code: \"es\" },\r\n      components: [\r\n        {\r\n          type: \"body\",\r\n          parameters: [\r\n            { type: \"text\", text: dogName },\r\n            { type: \"text\", text: calle },\r\n            { type: \"text\", text: colonia },\r\n            { type: \"text\", text: fecha },\r\n            { type: \"text\", text: hora },\r\n            { type: \"text\", text: tipoPaseo },\r\n            { type: \"text\", text: precio },\r\n            { type: \"text\", text: metodoPago }\r\n          ]\r\n        },\r\n        {\r\n          type: \"button\",\r\n          sub_type: \"quick_reply\",\r\n          index: 0,\r\n          parameters: [{ type: \"payload\", payload: \"SI\" }]\r\n        },\r\n        {\r\n          type: \"button\",\r\n          sub_type: \"quick_reply\",\r\n          index: 1,\r\n          parameters: [{ type: \"payload\", payload: \"NO\" }]\r\n        }\r\n      ]\r\n    }\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `https://graph.facebook.com/v19.0/${phone_number_id}/messages`,\r\n      body,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      }\r\n    );\r\n\r\n    console.log(\"✅ Plantilla 'agendar_resumen_paseo' enviada:\", res.data);\r\n  } catch (err) {\r\n    console.error(\"❌ Error al enviar plantilla 'agendar_resumen_paseo':\", err.response?.data || err);\r\n  }\r\n}\r\n\r\n\r\n/* Notificaciones */\r\n/**\r\n * Envía una plantilla de WhatsApp a través de la API de Meta.\r\n * @param numeroDestino Número del usuario en formato internacional (ej: '573123456789').\r\n * @param plantilla Nombre EXACTO de la plantilla aprobada en Meta.\r\n * @param variables Array de textos para las variables de la plantilla.\r\n */\r\nexport async function enviarPlantillaWhatsApp(numeroDestino: string, plantilla: string, variables: string[]) {\r\n  const url = `https://graph.facebook.com/v19.0/${process.env.WHATSAPP_PHONE_NUMBER_ID}/messages`;\r\n\r\n  const headers = {\r\n    Authorization: `Bearer ${process.env.WHATSAPP_TOKEN}`,\r\n    \"Content-Type\": \"application/json\",\r\n  };\r\n\r\n  const body = {\r\n    messaging_product: \"whatsapp\",\r\n    to: numeroDestino,\r\n    type: \"template\",\r\n    template: {\r\n      name: plantilla,\r\n      language: { code: \"es_CO\" },\r\n      components: [\r\n        {\r\n          type: \"body\",\r\n          parameters: variables.map((texto) => ({ type: \"text\", text: texto })),\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  try {\r\n    const response = await axios.post(url, body, { headers });\r\n    console.log(`✅ Mensaje enviado a ${numeroDestino} con plantilla \"${plantilla}\"`);\r\n    return response.data;\r\n  } catch (error: any) {\r\n    console.error(\"❌ Error al enviar mensaje:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n}\r\n\r\n\r\nexport async function TEMPLATE_confirmacion_paseo_cliente(\r\n  to,\r\n  {\r\n    nombreCliente,\r\n    nombrePerrito,\r\n    calle,\r\n    colonia,\r\n    fecha,\r\n    hora,\r\n    duracion,\r\n    precio,\r\n    pawwer\r\n  }\r\n) {\r\n  const token = process.env.jwtToken;\r\n  const phone_number_id = process.env.numberId;\r\n\r\n  const body = {\r\n    messaging_product: \"whatsapp\",\r\n    to,\r\n    type: \"template\",\r\n    template: {\r\n      name: \"confirmacion_paseo_cliente\",\r\n      language: { code: \"es\" },\r\n      components: [\r\n        {\r\n          type: \"body\",\r\n          parameters: [\r\n            { type: \"text\", text: nombreCliente },\r\n            { type: \"text\", text: nombrePerrito },\r\n            { type: \"text\", text: calle },\r\n            { type: \"text\", text: colonia },\r\n            { type: \"text\", text: fecha },\r\n            { type: \"text\", text: hora },\r\n            { type: \"text\", text: duracion },\r\n            { type: \"text\", text: precio },\r\n            { type: \"text\", text: pawwer }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `https://graph.facebook.com/v19.0/${phone_number_id}/messages`,\r\n      body,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      }\r\n    );\r\n\r\n    console.log(\"✅ Plantilla 'confirmacion_paseo_cliente' enviada:\", res.data);\r\n  } catch (err) {\r\n    console.error(\"❌ Error al enviar plantilla 'confirmacion_paseo_cliente':\", err.response?.data || err);\r\n  }\r\n}\r\n\r\nexport async function TEMPLATE_recordatorio_paseo_cliente(\r\n  to: string,\r\n  {\r\n    nombreCliente,\r\n    nombrePerrito,\r\n    fecha,\r\n    hora,\r\n    calle,\r\n    colonia,\r\n    duracion,\r\n  }: {\r\n    nombreCliente: string;\r\n    nombrePerrito: string;\r\n    fecha: string;\r\n    hora: string;\r\n    calle: string;\r\n    colonia: string;\r\n    duracion: string;\r\n  }\r\n) {\r\n  const token = process.env.jwtToken;\r\n  const phone_number_id = process.env.numberId;\r\n\r\n  const body = {\r\n    messaging_product: \"whatsapp\",\r\n    to,\r\n    type: \"template\",\r\n    template: {\r\n      name: \"recordatorio_paseo_cliente\",\r\n      language: { code: \"es\" },\r\n      components: [\r\n        {\r\n          type: \"body\",\r\n          parameters: [\r\n            { type: \"text\", text: nombreCliente },\r\n            { type: \"text\", text: nombrePerrito },\r\n            { type: \"text\", text: fecha },\r\n            { type: \"text\", text: hora },\r\n            { type: \"text\", text: calle },\r\n            { type: \"text\", text: colonia },\r\n            { type: \"text\", text: duracion },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `https://graph.facebook.com/v19.0/${phone_number_id}/messages`,\r\n      body,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    console.log(\"✅ Plantilla 'recordatorio_paseo_cliente' enviada:\", res.data);\r\n  } catch (err: any) {\r\n    console.error(\r\n      \"❌ Error al enviar plantilla 'recordatorio_paseo_cliente':\",\r\n      err.response?.data || err.message\r\n    );\r\n  }\r\n}\r\n\r\nexport async function TEMPLATE_recordatorio_paseo_pawwer(\r\n  to: string,\r\n  {\r\n    nombrePawwer,\r\n    nombrePerrito,\r\n    calle,\r\n    colonia,\r\n    fecha,\r\n    hora,\r\n    duracion,\r\n  }: {\r\n    nombrePawwer: string;\r\n    nombrePerrito: string;\r\n    calle: string;\r\n    colonia: string;\r\n    fecha: string;\r\n    hora: string;\r\n    duracion: string;\r\n  }\r\n) {\r\n  const token = process.env.jwtToken;\r\n  const phone_number_id = process.env.numberId;\r\n\r\n  const body = {\r\n    messaging_product: \"whatsapp\",\r\n    to,\r\n    type: \"template\",\r\n    template: {\r\n      name: \"recordatorio_paseo_pawwer\",\r\n      language: { code: \"es\" },\r\n      components: [\r\n        {\r\n          type: \"body\",\r\n          parameters: [\r\n            { type: \"text\", text: nombrePawwer },\r\n            { type: \"text\", text: nombrePerrito },\r\n            { type: \"text\", text: calle },\r\n            { type: \"text\", text: colonia },\r\n            { type: \"text\", text: fecha },\r\n            { type: \"text\", text: hora },\r\n            { type: \"text\", text: duracion },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `https://graph.facebook.com/v19.0/${phone_number_id}/messages`,\r\n      body,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    console.log(\"✅ Plantilla 'recordatorio_paseo_pawwer' enviada:\", res.data);\r\n  } catch (err: any) {\r\n    console.error(\r\n      \"❌ Error al enviar plantilla 'recordatorio_paseo_pawwer':\",\r\n      err.response?.data || err.message\r\n    );\r\n  }\r\n}\r\n\r\nexport async function TEMPLATE_llegada_pawwer(\r\n  to: string,\r\n  {\r\n    nombrePawwer,\r\n    nombrePerrito,\r\n  }: {\r\n    nombrePawwer: string;\r\n    nombrePerrito: string;\r\n  }\r\n) {\r\n  const token = process.env.jwtToken;\r\n  const phone_number_id = process.env.numberId;\r\n\r\n  const body = {\r\n    messaging_product: \"whatsapp\",\r\n    to,\r\n    type: \"template\",\r\n    template: {\r\n      name: \"llegada_pawwer\",\r\n      language: { code: \"es\" },\r\n      components: [\r\n        {\r\n          type: \"body\",\r\n          parameters: [\r\n            { type: \"text\", text: nombrePawwer },\r\n            { type: \"text\", text: nombrePerrito },\r\n          ],\r\n        },\r\n        {\r\n          type: \"button\",\r\n          sub_type: \"quick_reply\",\r\n          index: \"0\",\r\n          parameters: [{ type: \"payload\", payload: \"confirmar_llegada\" }],\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `https://graph.facebook.com/v19.0/${phone_number_id}/messages`,\r\n      body,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    console.log(\"✅ Plantilla 'llegada_pawwer' enviada:\", res.data);\r\n  } catch (err: any) {\r\n    console.error(\r\n      \"❌ Error al enviar plantilla 'llegada_pawwer':\",\r\n      err.response?.data || err.message\r\n    );\r\n  }\r\n}\r\n\r\nexport async function TEMPLATE_pawwer_llego_cliente(\r\n  to: string,\r\n  {\r\n    nombreCliente,\r\n    nombrePawwer,\r\n    nombrePerrito,\r\n    calle,\r\n    colonia,\r\n    fecha,\r\n    hora,\r\n    duracion,\r\n  }: {\r\n    nombreCliente: string;\r\n    nombrePawwer: string;\r\n    nombrePerrito: string;\r\n    calle: string;\r\n    colonia: string;\r\n    fecha: string;\r\n    hora: string;\r\n    duracion: string;\r\n  }\r\n) {\r\n  const token = process.env.jwtToken;\r\n  const phone_number_id = process.env.numberId;\r\n\r\n  const body = {\r\n    messaging_product: \"whatsapp\",\r\n    to,\r\n    type: \"template\",\r\n    template: {\r\n      name: \"pawwer_llego_cliente\",\r\n      language: { code: \"es\" },\r\n      components: [\r\n        {\r\n          type: \"body\",\r\n          parameters: [\r\n            { type: \"text\", text: nombreCliente },\r\n            { type: \"text\", text: nombrePawwer },\r\n            { type: \"text\", text: nombrePerrito },\r\n            { type: \"text\", text: calle },\r\n            { type: \"text\", text: colonia },\r\n            { type: \"text\", text: fecha },\r\n            { type: \"text\", text: hora },\r\n            { type: \"text\", text: duracion },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  const res = await axios.post(\r\n    `https://graph.facebook.com/v19.0/${phone_number_id}/messages`,\r\n    body,\r\n    {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }\r\n  );\r\n\r\n  console.log(\"📩 pawwer_llego_cliente enviada:\", res.data);\r\n}\r\n\r\n\r\nexport async function TEMPLATE_strava_recordatorio_pawwer(\r\n  to: string,\r\n  {\r\n    nombrePawwer,\r\n    nombrePerrito,\r\n  }: {\r\n    nombrePawwer: string;\r\n    nombrePerrito: string;\r\n  }\r\n) {\r\n  const token = process.env.jwtToken;\r\n  const phone_number_id = process.env.numberId;\r\n\r\n  const body = {\r\n    messaging_product: \"whatsapp\",\r\n    to,\r\n    type: \"template\",\r\n    template: {\r\n      name: \"strava_recordatorio_pawwer\",\r\n      language: { code: \"es\" },\r\n      components: [\r\n        {\r\n          type: \"body\",\r\n          parameters: [\r\n            { type: \"text\", text: nombrePawwer },\r\n            { type: \"text\", text: nombrePerrito },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `https://graph.facebook.com/v19.0/${phone_number_id}/messages`,\r\n      body,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    console.log(\"✅ Plantilla 'strava_recordatorio_pawwer' enviada:\", res.data);\r\n  } catch (err: any) {\r\n    console.error(\r\n      \"❌ Error al enviar plantilla 'strava_recordatorio_pawwer':\",\r\n      err.response?.data || err.message\r\n    );\r\n  }\r\n}\r\n\r\nexport async function TEMPLATE_link_strava_cliente(\r\n  to: string,\r\n  {\r\n    nombreCliente,\r\n    nombrePerrito,\r\n    linkStrava,\r\n  }: {\r\n    nombreCliente: string;\r\n    nombrePerrito: string;\r\n    linkStrava: string;\r\n  }\r\n) {\r\n  const token = process.env.jwtToken;\r\n  const phone_number_id = process.env.numberId;\r\n\r\n  const body = {\r\n    messaging_product: \"whatsapp\",\r\n    to,\r\n    type: \"template\",\r\n    template: {\r\n      name: \"link_strava_cliente\",\r\n      language: { code: \"es\" },\r\n      components: [\r\n        {\r\n          type: \"body\",\r\n          parameters: [\r\n            { type: \"text\", text: nombreCliente },\r\n            { type: \"text\", text: nombrePerrito },\r\n            { type: \"text\", text: linkStrava },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `https://graph.facebook.com/v19.0/${phone_number_id}/messages`,\r\n      body,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    console.log(\"✅ Plantilla 'link_strava_cliente' enviada:\", res.data);\r\n  } catch (err: any) {\r\n    console.error(\r\n      \"❌ Error al enviar plantilla 'link_strava_cliente':\",\r\n      err.response?.data || err.message\r\n    );\r\n  }\r\n}\r\n\r\nexport async function TEMPLATE_finalizar_paseo_pawwer(\r\n  to: string,\r\n  {\r\n    nombrePawwer,\r\n    nombrePerrito,\r\n  }: {\r\n    nombrePawwer: string;\r\n    nombrePerrito: string;\r\n  }\r\n) {\r\n  const token = process.env.jwtToken;\r\n  const phone_number_id = process.env.numberId;\r\n\r\n  const body = {\r\n    messaging_product: \"whatsapp\",\r\n    to,\r\n    type: \"template\",\r\n    template: {\r\n      name: \"finalizar_paseo_pawwer\",\r\n      language: { code: \"es\" },\r\n      components: [\r\n        {\r\n          type: \"body\",\r\n          parameters: [\r\n            { type: \"text\", text: nombrePawwer },\r\n            { type: \"text\", text: nombrePerrito },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `https://graph.facebook.com/v19.0/${phone_number_id}/messages`,\r\n      body,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    console.log(\"✅ Plantilla 'finalizar_paseo_pawwer' enviada:\", res.data);\r\n  } catch (err: any) {\r\n    console.error(\r\n      \"❌ Error al enviar plantilla 'finalizar_paseo_pawwer':\",\r\n      err.response?.data || err.message\r\n    );\r\n  }\r\n}\r\n\r\nexport async function TEMPLATE_paseo_finalizado_cliente(\r\n  to: string,\r\n  {\r\n    nombreCliente,\r\n    nombrePerrito,\r\n  }: {\r\n    nombreCliente: string;\r\n    nombrePerrito: string;\r\n  }\r\n) {\r\n  const token = process.env.jwtToken;\r\n  const phone_number_id = process.env.numberId;\r\n\r\n  const body = {\r\n    messaging_product: \"whatsapp\",\r\n    to,\r\n    type: \"template\",\r\n    template: {\r\n      name: \"paseo_finalizado_cliente\",\r\n      language: { code: \"es\" },\r\n      components: [\r\n        {\r\n          type: \"body\",\r\n          parameters: [\r\n            { type: \"text\", text: nombreCliente },\r\n            { type: \"text\", text: nombrePerrito },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `https://graph.facebook.com/v19.0/${phone_number_id}/messages`,\r\n      body,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    console.log(\"✅ Plantilla 'paseo_finalizado_cliente' enviada:\", res.data);\r\n  } catch (err: any) {\r\n    console.error(\r\n      \"❌ Error al enviar plantilla 'paseo_finalizado_cliente':\",\r\n      err.response?.data || err.message\r\n    );\r\n  }\r\n}\r\n\r\nexport async function TEMPLATE_recordatorio_pago_cliente(\r\n  to: string,\r\n  {\r\n    nombreCliente,\r\n    nombrePerrito,\r\n    valorPaseo,\r\n  }: {\r\n    nombreCliente: string;\r\n    nombrePerrito: string;\r\n    valorPaseo: string;\r\n  }\r\n) {\r\n  const token = process.env.jwtToken;\r\n  const phone_number_id = process.env.numberId;\r\n\r\n  const body = {\r\n    messaging_product: \"whatsapp\",\r\n    to,\r\n    type: \"template\",\r\n    template: {\r\n      name: \"recordatorio_pago_cliente\",\r\n      language: { code: \"es\" },\r\n      components: [\r\n        {\r\n          type: \"body\",\r\n          parameters: [\r\n            { type: \"text\", text: nombreCliente },\r\n            { type: \"text\", text: nombrePerrito },\r\n            { type: \"text\", text: valorPaseo },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `https://graph.facebook.com/v19.0/${phone_number_id}/messages`,\r\n      body,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    console.log(\"✅ Plantilla 'recordatorio_pago_cliente' enviada:\", res.data);\r\n  } catch (err: any) {\r\n    console.error(\r\n      \"❌ Error al enviar plantilla 'recordatorio_pago_cliente':\",\r\n      err.response?.data || err.message\r\n    );\r\n  }\r\n}","import axios from \"axios\";\r\nimport dotenv from \"dotenv\";\r\ndotenv.config();\r\n\r\n// Enviar mensaje de texto simple\r\nexport async function sendText(to: string, text: string) {\r\n  const token = process.env.jwtToken;\r\n  const phone_number_id = process.env.numberId;\r\n\r\n  const body = {\r\n    messaging_product: \"whatsapp\",\r\n    to,\r\n    type: \"text\",\r\n    text: {\r\n      body: text\r\n    }\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `https://graph.facebook.com/v19.0/${phone_number_id}/messages`,\r\n      body,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      }\r\n    );\r\n\r\n    console.log(\"✅ Mensaje de texto enviado:\", res.data);\r\n  } catch (err) {\r\n    console.error(\"❌ Error al enviar texto:\", err.response?.data || err);\r\n  }\r\n}\r\n\r\n// Enviar mensaje con botones interactivos\r\nexport async function sendButtons(to: string, text: string, buttons: { body: string, payload: string }[]) {\r\n  const token = process.env.jwtToken;\r\n  const phone_number_id = process.env.numberId;\r\n\r\n  const body = {\r\n    messaging_product: \"whatsapp\",\r\n    to,\r\n    type: \"interactive\",\r\n    interactive: {\r\n      type: \"button\",\r\n      body: { text },\r\n      action: {\r\n        buttons: buttons.map((btn, idx) => ({\r\n          type: \"reply\",\r\n          reply: {\r\n            id: btn.payload || `btn_${idx}`,\r\n            title: btn.body\r\n          }\r\n        }))\r\n      }\r\n    }\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `https://graph.facebook.com/v19.0/${phone_number_id}/messages`,\r\n      body,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      }\r\n    );\r\n    console.log(\"✅ Mensaje con botones enviado:\", res.data);\r\n  } catch (err) {\r\n    console.error(\"❌ Error al enviar mensaje con botones:\", err.response?.data || err);\r\n  }\r\n}\r\n","import { MongoClient, ServerApiVersion } from \"mongodb\";\r\n\r\nconst uri = process.env.MONGO_URI || \"\";\r\n\r\nlet client: MongoClient | null = null;\r\n\r\nexport async function getMongoClient(): Promise<MongoClient> {\r\n  if (!client) {\r\n    client = new MongoClient(uri, {\r\n      serverApi: {\r\n        version: ServerApiVersion.v1,\r\n        strict: true,\r\n        deprecationErrors: true,\r\n      },\r\n    });\r\n    await client.connect();\r\n    console.log(\"✅ MongoDB conectado\");\r\n  }\r\n\r\n  return client;\r\n}\r\n","import fetch from 'node-fetch';\r\n\r\nconst AIRTABLE_BASE = 'https://api.airtable.com/v0/appOceFmbxh8PfLKT/Leads';\r\nconst AIRTABLE_TOKEN = process.env.AIRTABLE_TOKEN || process.env.airtableApiKey;\r\n\r\ninterface LeadFields {\r\n  FechaCreacion: string;\r\n  Celular: string;\r\n  Perro: string;\r\n  Anotaciones?: string;\r\n  Direccion: string;\r\n  TipoServicio: string;\r\n  TiempoServicio: string;\r\n  Fecha: string;\r\n  Hora: string;\r\n  Precio: number;\r\n  Estado?: string;\r\n  Pawwer?: string;\r\n  \"metodo Pago\"?: string;\r\n  \"Nombre cliente\": string;\r\n  \"Nombre completo (from Pawwer)\"?: string;\r\n  \"Numero de teléfono (from Pawwer)\"?: string[];\r\n}\r\n\r\ninterface AirtableRecord {\r\n  id: string;\r\n  createdTime: string;\r\n  fields: LeadFields;\r\n}\r\n\r\ninterface AirtableResponse {\r\n  records: AirtableRecord[];\r\n  offset?: string;\r\n}\r\n\r\ninterface AirtableDeleteResponse {\r\n  id: string;\r\n  deleted: boolean;\r\n}\r\n\r\n// ✅ Crear Lead\r\nexport async function createLead(fields: LeadFields): Promise<AirtableResponse> {\r\n  const res = await fetch(AIRTABLE_BASE, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Authorization': `Bearer ${AIRTABLE_TOKEN}`,\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      records: [{ fields }],\r\n    }),\r\n  });\r\n\r\n  if (!res.ok) {\r\n    const error = await res.text();\r\n    throw new Error(`Airtable error: ${error}`);\r\n  }\r\n\r\n  return res.json() as Promise<AirtableResponse>;\r\n}\r\n\r\n// ✅ Obtener Leads (con filtro opcional)\r\nexport async function getLeads(\r\n  filterByFormula?: string,\r\n  maxRecords = 100,\r\n  view = 'Grid view',\r\n  offset?: string\r\n): Promise<AirtableResponse> {\r\n  const params = new URLSearchParams({\r\n    maxRecords: maxRecords.toString(),\r\n    view,\r\n  });\r\n  if (filterByFormula) params.append('filterByFormula', filterByFormula);\r\n  if (offset) params.append('offset', offset);\r\n\r\n  const url = `${AIRTABLE_BASE}?${params.toString()}`;\r\n  const res = await fetch(url, {\r\n    headers: {\r\n      'Authorization': `Bearer ${AIRTABLE_TOKEN}`,\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n\r\n  if (!res.ok) {\r\n    const error = await res.text();\r\n    throw new Error(`Airtable error: ${error}`);\r\n  }\r\n\r\n  return res.json() as Promise<AirtableResponse>;\r\n}\r\n\r\n// ✅ Obtener Lead por ID (nuevo)\r\nexport async function getLeadById(recordId: string): Promise<AirtableRecord> {\r\n  const url = `${AIRTABLE_BASE}/${recordId}`;\r\n  const res = await fetch(url, {\r\n    headers: {\r\n      'Authorization': `Bearer ${AIRTABLE_TOKEN}`,\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n\r\n  if (!res.ok) {\r\n    const error = await res.text();\r\n    throw new Error(`Airtable error: ${error}`);\r\n  }\r\n\r\n  return res.json() as Promise<AirtableRecord>;\r\n}\r\n\r\n// ✅ Actualizar Lead\r\nexport async function updateLead(recordId: string, fields: Partial<LeadFields>): Promise<AirtableResponse> {\r\n  const res = await fetch(AIRTABLE_BASE, {\r\n    method: 'PATCH',\r\n    headers: {\r\n      'Authorization': `Bearer ${AIRTABLE_TOKEN}`,\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      records: [{ id: recordId, fields }],\r\n    }),\r\n  });\r\n\r\n  if (!res.ok) {\r\n    const error = await res.text();\r\n    throw new Error(`Airtable error: ${error}`);\r\n  }\r\n\r\n  return res.json() as Promise<AirtableResponse>;\r\n}\r\n\r\n// ✅ Eliminar Lead\r\nexport async function deleteLead(recordId: string): Promise<AirtableDeleteResponse> {\r\n  const url = `${AIRTABLE_BASE}/${recordId}`;\r\n  const res = await fetch(url, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'Authorization': `Bearer ${AIRTABLE_TOKEN}`,\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n\r\n  if (!res.ok) {\r\n    const error = await res.text();\r\n    throw new Error(`Airtable error: ${error}`);\r\n  }\r\n\r\n  return res.json() as Promise<AirtableDeleteResponse>;\r\n}\r\n","import fetch from 'node-fetch';\r\n\r\nconst AIRTABLE_BASE_PASEOS = 'https://api.airtable.com/v0/appOceFmbxh8PfLKT/Control%20de%20paseos';\r\nconst AIRTABLE_TOKEN = process.env.AIRTABLE_TOKEN || process.env.airtableApiKey;\r\n\r\ninterface PaseoFields {\r\n  FechaCreacion: string;\r\n  Celular: string;\r\n  Perro: string;\r\n  Anotaciones?: string;\r\n  Direccion: string;\r\n  TipoServicio: string;\r\n  TiempoServicio: string;\r\n  Fecha: string;\r\n  Precio: number;\r\n  Estado?: string;\r\n  Pawwer?: string[];\r\n  Hora: string;\r\n  \"metodo Pago\"?: string;\r\n  \"Numero de teléfono (from Pawwer)\"?: string[];\r\n  \"Link Strava\"?: string;\r\n  \"Nombre cliente\"?: string;\r\n  \"Nombre completo (from Pawwer)\"?: string;\r\n}\r\n\r\ninterface AirtableRecordPaseo {\r\n  id: string;\r\n  createdTime: string;\r\n  fields: PaseoFields;\r\n}\r\n\r\ninterface AirtableResponsePaseo {\r\n  records: AirtableRecordPaseo[];\r\n  offset?: string;\r\n}\r\n\r\ninterface AirtableDeleteResponse {\r\n  id: string;\r\n  deleted: boolean;\r\n}\r\n\r\n// Crear Paseo\r\nexport async function createPaseo(fields: PaseoFields): Promise<AirtableResponsePaseo> {\r\n  const res = await fetch(AIRTABLE_BASE_PASEOS, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Authorization': `Bearer ${AIRTABLE_TOKEN}`,\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      records: [{ fields }],\r\n    }),\r\n  });\r\n\r\n  if (!res.ok) {\r\n    const error = await res.text();\r\n    throw new Error(`Airtable error: ${error}`);\r\n  }\r\n\r\n  return res.json() as Promise<AirtableResponsePaseo>;\r\n}\r\n\r\n// Obtener paseos (con filtro opcional)\r\nexport async function getPaseos(\r\n  filterByFormula?: string,\r\n  maxRecords = 100,\r\n  view = 'Grid view',\r\n  offset?: string\r\n): Promise<AirtableResponsePaseo> {\r\n  const params = new URLSearchParams({\r\n    maxRecords: maxRecords.toString(),\r\n    view,\r\n  });\r\n  if (filterByFormula) params.append('filterByFormula', filterByFormula);\r\n  if (offset) params.append('offset', offset);\r\n\r\n  const url = `${AIRTABLE_BASE_PASEOS}?${params.toString()}`;\r\n  const res = await fetch(url, {\r\n    headers: {\r\n      'Authorization': `Bearer ${AIRTABLE_TOKEN}`,\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n\r\n  if (!res.ok) {\r\n    const error = await res.text();\r\n    throw new Error(`Airtable error: ${error}`);\r\n  }\r\n\r\n  return res.json() as Promise<AirtableResponsePaseo>;\r\n}\r\n\r\nexport async function getPaseoByPawwerTelefono(pawwerTelefono: string): Promise<AirtableRecordPaseo | null> {\r\n  const formula = `AND(SEARCH('${pawwerTelefono}', ARRAYJOIN({Numero de teléfono (from Pawwer)})), {Estado} = 'Esperando Pawwer')`;\r\n\r\n  const res = await getPaseos(formula, 1); // Solo necesitas uno\r\n\r\n  if (res.records.length === 0) {\r\n    console.log(\"❌ No se encontró un paseo con ese número y estado 'Esperando Pawwer'\");\r\n    return null;\r\n  }\r\n\r\n  const paseo = res.records[0];\r\n  console.log(\"✅ Paseo encontrado:\", paseo.id);\r\n  return paseo;\r\n}\r\n\r\nexport async function getPaseoByPawwerTelefonoActive(pawwerTelefono: string): Promise<AirtableRecordPaseo | null> {\r\n  // La fórmula Airtable para buscar registros donde:\r\n  // - El número está en \"Numero de teléfono (from Pawwer)\"\r\n  // - El Estado NO es \"Finalizado\"\r\n  // - El Estado NO es \"Cancelado\"\r\n  // Es decir, los paseos activos o en proceso.\r\n  const formula = `AND(\r\n    SEARCH('${pawwerTelefono}', ARRAYJOIN({Numero de teléfono (from Pawwer)})),\r\n    NOT({Estado} = 'Finalizado'),\r\n    NOT({Estado} = 'Cancelado')\r\n  )`;\r\n\r\n  const res = await getPaseos(formula, 1); // Solo uno, el primero que cumpla\r\n\r\n  if (res.records.length === 0) {\r\n    console.log(\"❌ No se encontró un paseo activo para ese Pawwer\");\r\n    return null;\r\n  }\r\n\r\n  const paseo = res.records[0];\r\n  console.log(\"✅ Paseo activo encontrado:\", paseo.id);\r\n  return paseo;\r\n}\r\n\r\n\r\n\r\n// Obtener Paseo por ID\r\nexport async function getPaseoById(recordId: string): Promise<AirtableRecordPaseo> {\r\n  const url = `${AIRTABLE_BASE_PASEOS}/${recordId}`;\r\n  const res = await fetch(url, {\r\n    headers: {\r\n      'Authorization': `Bearer ${AIRTABLE_TOKEN}`,\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n\r\n  if (!res.ok) {\r\n    const error = await res.text();\r\n    throw new Error(`Airtable error: ${error}`);\r\n  }\r\n\r\n  return res.json() as Promise<AirtableRecordPaseo>;\r\n}\r\n\r\n// Actualizar Paseo\r\nexport async function updatePaseo(recordId: string, fields: Partial<PaseoFields>): Promise<AirtableResponsePaseo> {\r\n  const res = await fetch(AIRTABLE_BASE_PASEOS, {\r\n    method: 'PATCH',\r\n    headers: {\r\n      'Authorization': `Bearer ${AIRTABLE_TOKEN}`,\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      records: [{ id: recordId, fields }],\r\n    }),\r\n  });\r\n\r\n  if (!res.ok) {\r\n    const error = await res.text();\r\n    throw new Error(`Airtable error: ${error}`);\r\n  }\r\n\r\n  return res.json() as Promise<AirtableResponsePaseo>;\r\n}\r\n\r\n// Eliminar Paseo\r\nexport async function deletePaseo(recordId: string): Promise<AirtableDeleteResponse> {\r\n  const url = `${AIRTABLE_BASE_PASEOS}/${recordId}`;\r\n  const res = await fetch(url, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'Authorization': `Bearer ${AIRTABLE_TOKEN}`,\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n\r\n  if (!res.ok) {\r\n    const error = await res.text();\r\n    throw new Error(`Airtable error: ${error}`);\r\n  }\r\n\r\n  return res.json() as Promise<AirtableDeleteResponse>;\r\n}\r\n","import fetch from 'node-fetch';\r\n\r\nconst AIRTABLE_BASE = 'https://api.airtable.com/v0/appOceFmbxh8PfLKT/Completados';\r\nconst AIRTABLE_TOKEN = process.env.AIRTABLE_TOKEN || process.env.airtableApiKey;\r\n\r\nexport interface CompletadoFields {\r\n  FechaCreacion: string;\r\n  Celular: string;\r\n  Perro: string;\r\n  Anotaciones?: string;\r\n  Direccion: string;\r\n  TipoServicio: string;\r\n  TiempoServicio: string;\r\n  Fecha: string;\r\n  Hora: string;\r\n  Precio: number;\r\n  Estado?: string;\r\n  Pawwer?: string[];\r\n  \"metodo Pago\"?: string;\r\n  \"Nombre cliente\": string;\r\n  \"Nombre pawwer\"?: string;\r\n  \"Link Strava\"?: string;\r\n}\r\n\r\nexport interface CompletadoRecord {\r\n  id: string;\r\n  createdTime: string;\r\n  fields: CompletadoFields;\r\n}\r\n\r\nexport interface CompletadoResponse {\r\n  records: CompletadoRecord[];\r\n  offset?: string;\r\n}\r\n\r\nexport interface CompletadoDeleteResponse {\r\n  id: string;\r\n  deleted: boolean;\r\n}\r\n\r\n// ✅ Crear Completado\r\nexport async function createCompletado(fields: CompletadoFields): Promise<CompletadoResponse> {\r\n  const res = await fetch(AIRTABLE_BASE, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Authorization': `Bearer ${AIRTABLE_TOKEN}`,\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ records: [{ fields }] }),\r\n  });\r\n\r\n  if (!res.ok) {\r\n    const error = await res.text();\r\n    throw new Error(`Airtable error: ${error}`);\r\n  }\r\n\r\n  return res.json() as Promise<CompletadoResponse>;\r\n}\r\n\r\n// ✅ Obtener Completados\r\nexport async function getCompletados(\r\n  filterByFormula?: string,\r\n  maxRecords = 100,\r\n  view = 'Grid view',\r\n  offset?: string\r\n): Promise<CompletadoResponse> {\r\n  const params = new URLSearchParams({\r\n    maxRecords: maxRecords.toString(),\r\n    view,\r\n  });\r\n  if (filterByFormula) params.append('filterByFormula', filterByFormula);\r\n  if (offset) params.append('offset', offset);\r\n\r\n  const url = `${AIRTABLE_BASE}?${params.toString()}`;\r\n  const res = await fetch(url, {\r\n    headers: {\r\n      'Authorization': `Bearer ${AIRTABLE_TOKEN}`,\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n\r\n  if (!res.ok) {\r\n    const error = await res.text();\r\n    throw new Error(`Airtable error: ${error}`);\r\n  }\r\n\r\n  return res.json() as Promise<CompletadoResponse>;\r\n}\r\n\r\n// ✅ Obtener Completado por ID\r\nexport async function getCompletadoById(recordId: string): Promise<CompletadoRecord> {\r\n  const url = `${AIRTABLE_BASE}/${recordId}`;\r\n  const res = await fetch(url, {\r\n    headers: {\r\n      'Authorization': `Bearer ${AIRTABLE_TOKEN}`,\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n\r\n  if (!res.ok) {\r\n    const error = await res.text();\r\n    throw new Error(`Airtable error: ${error}`);\r\n  }\r\n\r\n  return res.json() as Promise<CompletadoRecord>;\r\n}\r\n\r\n// ✅ Actualizar Completado\r\nexport async function updateCompletado(recordId: string, fields: Partial<CompletadoFields>): Promise<CompletadoResponse> {\r\n  const res = await fetch(AIRTABLE_BASE, {\r\n    method: 'PATCH',\r\n    headers: {\r\n      'Authorization': `Bearer ${AIRTABLE_TOKEN}`,\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      records: [{ id: recordId, fields }],\r\n    }),\r\n  });\r\n\r\n  if (!res.ok) {\r\n    const error = await res.text();\r\n    throw new Error(`Airtable error: ${error}`);\r\n  }\r\n\r\n  return res.json() as Promise<CompletadoResponse>;\r\n}\r\n\r\n// ✅ Eliminar Completado\r\nexport async function deleteCompletado(recordId: string): Promise<CompletadoDeleteResponse> {\r\n  const url = `${AIRTABLE_BASE}/${recordId}`;\r\n  const res = await fetch(url, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'Authorization': `Bearer ${AIRTABLE_TOKEN}`,\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n\r\n  if (!res.ok) {\r\n    const error = await res.text();\r\n    throw new Error(`Airtable error: ${error}`);\r\n  }\r\n\r\n  return res.json() as Promise<CompletadoDeleteResponse>;\r\n}\r\n","import { addKeyword, EVENTS } from \"@builderbot/bot\";\r\nimport { TEMPLATE_bienvenida_pawwi, TEMPLATE_registro_agendar_paseo, TEMPLATE_registro_consideraciones_perrito, TEMPLATE_registro_edad_perrito, TEMPLATE_registro_raza_perrito, TEMPLATE_registro_nombre_perrito, TEMPLATE_registro_vacunas_perrito, TEMPLATE_agendar_tipo_paseo, TEMPLATE_agendar_fecha_paseo, TEMPLATE_ragendar_hora_paseo, TEMPLATE_agendar_metodo_pago, TEMPLATE_agendar_resumen_paseo, TEMPLATE_confirmacion_paseo_cliente, TEMPLATE_llegada_pawwer, TEMPLATE_pawwer_llego_cliente, TEMPLATE_strava_recordatorio_pawwer, TEMPLATE_link_strava_cliente, TEMPLATE_recordatorio_paseo_cliente, TEMPLATE_recordatorio_paseo_pawwer, TEMPLATE_finalizar_paseo_pawwer, TEMPLATE_paseo_finalizado_cliente, TEMPLATE_recordatorio_pago_cliente } from \"../services/send-template\";\r\nimport { sendText, sendButtons } from \"../services/send-text\";\r\n\r\nimport { getMongoClient } from '../services/mongo';\r\nimport { createLead, deleteLead, getLeads, updateLead } from \"~/services/airtable-leads\";\r\nimport { createPaseo, getPaseoByPawwerTelefono, getPaseoByPawwerTelefonoActive, getPaseos, updatePaseo } from \"~/services/airtable-paseos\";\r\nimport { log } from \"node:console\";\r\nimport { BotContext } from \"@builderbot/bot/dist/types\";\r\nimport { send } from \"node:process\";\r\nimport { createCompletado } from \"~/services/airtable-completados\";\r\nimport { text } from \"node:stream/consumers\";\r\n\r\n//TODO: Reiniciar conversacion con el cliente si este no ha interactuado en 1 hora\r\n\r\nconst regex = (text) => {\r\n  if (!text || text.trim() === \"\") return false;\r\n  return /^[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]+$/.test(text.trim());\r\n};\r\n\r\nconst perritoData = {};\r\nconst usuarioData = {};\r\n\r\n// Define the interface for a single dog (Perro)\r\ninterface Perro {\r\n  nombre: string;\r\n  raza: string;\r\n  edad: string;\r\n  consideraciones: string;\r\n  vacunas: boolean;\r\n}\r\n\r\n// Define the interface for a user (Usuario)\r\ninterface Usuario {\r\n  celular: string;\r\n  tipoUsuario?: string; // Optional, can be 'cliente' or 'pawwer'\r\n  nombre: string;\r\n  direccion: string;\r\n  perros: Perro[];\r\n  agendamientos: number;\r\n  creadoEn: Date;\r\n  perroSeleccionado?: Perro;\r\n  diaSeleccionado?: string;\r\n  horaSeleccionada?: string;\r\n  metodoPago?: string;\r\n  valor?: number;\r\n  Direccion?: string;\r\n  agendamientoSeleccionado?: string;\r\n}\r\n\r\nconst createLeadMongo = async (leadData) => {\r\n  const client = await getMongoClient();\r\n  const db = client.db(\"pawwi_bot\");\r\n  const leads = db.collection(\"leads\");\r\n  await leads.insertOne({ ...leadData, creadoEn: new Date() });\r\n};\r\n\r\nconst updateUsuarioDireccion = async (celular, direccion) => {\r\n  const client = await getMongoClient();\r\n  const db = client.db(\"pawwi_bot\");\r\n  const usuarios = db.collection(\"usuarios\");\r\n  await usuarios.updateOne({ celular }, { $set: { Direccion: direccion } });\r\n};\r\n\r\nconst insertarPerro = async (celular: string, perroData: Perro) => { // Add type annotations to parameters\r\n  const client = await getMongoClient();\r\n  const db = client.db(\"pawwi_bot\");\r\n  const usuarios = db.collection<Usuario>(\"usuarios\"); // <--- Optional: Use a generic for collection to get better type inference\r\n  await usuarios.updateOne(\r\n    { celular },\r\n    { $push: { perros: perroData } }\r\n  );\r\n};\r\nfunction parseFechaHora(fecha: string, hora: string): Date | null {\r\n   if (!fecha || typeof fecha !== 'string') {\r\n    console.warn('parseFechaHora: fecha inválida:', fecha);\r\n    return null;\r\n  }\r\n  if (!hora || typeof hora !== 'string') {\r\n    console.warn('parseFechaHora: hora inválida:', hora);\r\n    return null;\r\n  }\r\n  // fecha formato \"DD/MM\"\r\n  const [dayStr, monthStr] = fecha.split('/');\r\n  if (!dayStr || !monthStr) return null;\r\n\r\n  const now = new Date();\r\n  const year = now.getFullYear();\r\n\r\n  const day = parseInt(dayStr, 10);\r\n  const month = parseInt(monthStr, 10) - 1; // meses base 0\r\n\r\n  const [hourStr, minStr] = hora.split(':');\r\n  if (!hourStr || !minStr) return null;\r\n  const hour = parseInt(hourStr, 10);\r\n  const min = parseInt(minStr, 10);\r\n\r\n  return new Date(year, month, day, hour, min, 0);\r\n}\r\n\r\nasync function checkAndUpdatePaseoEstado(recordFields: any) {\r\n  const fechaHoraPaseo = parseFechaHora(recordFields.Fecha, recordFields.Hora);\r\n  if (!fechaHoraPaseo) return;\r\n\r\n  const ahora = new Date();\r\n  const diffMs = fechaHoraPaseo.getTime() - ahora.getTime();\r\n  const diffMinutos = diffMs / 60000;\r\n\r\n  // Consideramos entre 59 y 61 minutos para actualizar (ajustable)\r\n  if (diffMinutos > 59 && diffMinutos < 61) {\r\n    const filter = `AND({Celular}='${recordFields.Celular}', {Fecha}='${recordFields.Fecha}', {Hora}='${recordFields.Hora}')`;\r\n    const paseosResp = await getPaseos(filter, 1, \"Grid view\");\r\n\r\n    if (paseosResp.records.length === 0) {\r\n      console.warn(\"No se encontró paseo para actualizar estado 1 hora\");\r\n      return;\r\n    }\r\n\r\n    const paseoRecord = paseosResp.records[0];\r\n\r\n    // Solo actualizamos si el estado es distinto para evitar llamadas repetidas\r\n    if (paseoRecord.fields.Estado !== \"Por realizarse en 1 hora\") {\r\n      await updatePaseo(paseoRecord.id, { Estado: \"Por realizarse en 1 hora\" });\r\n      console.log(`🕐 Estado actualizado a 'Por realizarse en 1 hora' para paseo ID: ${paseoRecord.id}`);\r\n    }\r\n  }\r\n}\r\n\r\nconst checkLeadCount = async () => {\r\n  try {\r\n    checkPaseos();\r\n\r\n    checkLEADS();\r\n    \r\n  } catch (error) {\r\n    console.error(\"❌ Error al consultar los leads en Airtable:\", error);\r\n  }\r\n};\r\n\r\nasync function checkPaseos() {\r\n  const paseos = await getPaseos();\r\n\r\n    //PASEOS\r\n    for (const paseo of paseos.records) {\r\n\r\n      const fechaPaseo = parseFechaHora(paseo.fields.Fecha, paseo.fields.Hora);\r\n      \r\n      if (fechaPaseo) {\r\n        const ahora = new Date();\r\n        const diferenciaMs = fechaPaseo.getTime() - ahora.getTime();\r\n\r\n        if (diferenciaMs <= 0) {\r\n          console.log(`⏱️ El paseo ya ocurrió o está ocurriendo ahora.`);\r\n\r\n          let tiempoServicioMinutos = 15;\r\n\r\n          if (paseo.fields.TiempoServicio === \"30 minutos\") {\r\n            tiempoServicioMinutos = 30;\r\n          } else if (paseo.fields.TiempoServicio === \"60 minutos\") {\r\n            tiempoServicioMinutos = 60;\r\n          }\r\n\r\n          const ahora = new Date();\r\n          const finPaseo = new Date(fechaPaseo.getTime() + tiempoServicioMinutos * 60000);\r\n          const tiempoRestanteMs = finPaseo.getTime() - ahora.getTime();\r\n\r\n          if (tiempoRestanteMs <= 0 && paseo.fields.Estado == \"Esperando finalizacion\") {\r\n            console.log(`✅ El paseo ya terminó hace ${Math.abs(Math.floor(tiempoRestanteMs / 60000))} minutos.`);\r\n            await updatePaseo(paseo.id, { Estado: \"Esperando finalizacion de Pawwer\" });\r\n            await TEMPLATE_finalizar_paseo_pawwer(paseo.fields[\"Numero de teléfono (from Pawwer)\"][0], {\r\n              nombrePawwer: paseo.fields[\"Nombre pawwer\"] || \"Pawwer\",\r\n              nombrePerrito: paseo.fields.Perro || \"tu perrito\",\r\n            });\r\n          } else {\r\n            console.log(`🕒 El paseo está en curso. Faltan ${Math.ceil(tiempoRestanteMs / 60000)} minutos para que termine.`);\r\n          }\r\n\r\n          console.log(\"🗓️ Tiempo del paseo \" + paseo.id + \": \" + tiempoServicioMinutos + \" minutos\");\r\n        }\r\n\r\n        else {\r\n          const minutos = Math.floor(diferenciaMs / (1000 * 60)) % 60;\r\n          const horas = Math.floor(diferenciaMs / (1000 * 60 * 60));\r\n\r\n          console.log(`⏳ Faltan ${horas}h ${minutos}m para el paseo.`);\r\n\r\n          const totalMinutos = Math.floor(diferenciaMs / (1000 * 60));\r\n\r\n          //EN MENOS DE UN HORA\r\n          if (totalMinutos <= 60 && paseo.fields.Estado == \"Por realizarse\") {\r\n            try {\r\n              await updatePaseo(paseo.id, { Estado: \"Por realizarse en 1 hora\" });\r\n              console.log(`Cliente ${paseo.fields.Celular}`);\r\n              console.log(`Pawwer ${paseo.fields['Numero de teléfono (from Pawwer)'][0]}`);\r\n\r\n              //Plantilla de recordatorio cliente\r\n              await TEMPLATE_recordatorio_paseo_cliente(paseo.fields.Celular, {\r\n                nombreCliente: paseo.fields[\"Nombre cliente\"] || \"Cliente\",\r\n                nombrePerrito: paseo.fields.Perro || \"tu perrito\",\r\n                fecha: paseo.fields.Fecha || \"No definida\",\r\n                hora: paseo.fields.Hora || \"No definida\",\r\n                calle: (paseo.fields.Direccion || \"\").split(\" – \")[0] || \"No definida\",\r\n                colonia: (paseo.fields.Direccion || \"\").split(\" – \")[1] || \"No definida\",\r\n                duracion: paseo.fields.TiempoServicio || \"No definido\",\r\n              });\r\n\r\n              //Plantilla de recordatorio pawwer\r\n              const [calle = \"No definida\", colonia = \"No definida\"] = (paseo.fields.Direccion || \"\").split(\" – \");\r\n\r\n              await TEMPLATE_recordatorio_paseo_pawwer(paseo.fields[\"Numero de teléfono (from Pawwer)\"]?.[0] || \"\", {\r\n                nombrePawwer: paseo.fields[\"Nombre pawwer\"] || \"Pawwer\",\r\n                nombrePerrito: paseo.fields.Perro || \"tu perrito\",\r\n                calle,\r\n                colonia,\r\n                fecha: paseo.fields.Fecha || \"No definida\",\r\n                hora: paseo.fields.Hora || \"No definida\",\r\n                duracion: paseo.fields.TiempoServicio || \"No definido\",\r\n              });\r\n\r\n              \r\n              console.log(`⏰ Estado actualizado a \"En menos de 1 hora\" para paseo ID ${paseo.id}`);\r\n            } \r\n            catch (error) {\r\n              console.error(`❌ Error al actualizar estado del paseo ${paseo.id}:`, error);\r\n            }\r\n          }\r\n\r\n          //YA VA A LLEGAR\r\n          else if (totalMinutos <= 10 && paseo.fields.Estado == \"Por realizarse en 1 hora\") {\r\n            try {\r\n              await updatePaseo(paseo.id, { Estado: \"Esperando Pawwer\" });\r\n              console.log(`⏳ Estado actualizado a \"Esperando Pawwer\" para paseo ID ${paseo.id}`);\r\n\r\n              const pawwerTelefono = Array.isArray(paseo.fields.Pawwer) && paseo.fields.Pawwer.length > 0\r\n              ? paseo.fields.Pawwer[0]\r\n              : null;\r\n\r\n              const nombrePawwer = \"Pawwer\";\r\n              const nombrePerrito = paseo.fields.Perro || \"tu perrito\";\r\n\r\n              if (pawwerTelefono) {\r\n                await TEMPLATE_llegada_pawwer(paseo.fields[\"Numero de teléfono (from Pawwer)\"][0], { nombrePawwer, nombrePerrito });\r\n                console.log(`✅ Plantilla llegada_pawwer enviada a Pawwer ${pawwerTelefono}`);\r\n              } else {\r\n                console.warn(`⚠️ No se encontró teléfono del Pawwer para paseo ID ${paseo.id}`);\r\n              }\r\n            } catch (error) {\r\n              console.error(`❌ Error al actualizar estado o enviar plantilla llegada_pawwer:`, error);\r\n            }\r\n          }\r\n\r\n\r\n        }\r\n      } else {\r\n        console.warn(`⚠️ No se pudo interpretar la fecha/hora del paseo.`);\r\n      }\r\n    }\r\n}\r\n\r\nasync function checkLEADS() {\r\n  const filterFormula = \"Estado = 'confirmado'\";\r\n    const response = await getLeads(filterFormula, 2, \"Grid view\");\r\n  //LEADS\r\n    console.log(`[LEAD COUNT] Total de leads confirmados (máx 2): ${response.records.length}`);\r\n\r\n    for (const record of response.records) {\r\n\r\n      const { Fecha, Hora, Pawwer, Celular } = record.fields;\r\n\r\n      const errores: string[] = [];\r\n\r\n      // Validar Fecha: formato DD/MM\r\n      if (!/^\\d{1,2}\\/\\d{1,2}$/.test(Fecha)) {\r\n        errores.push(\"Formato de fecha inválido (esperado DD/MM)\");\r\n      }\r\n\r\n      // Validar Hora: formato HH:mm\r\n      if (!/^([01]?\\d|2[0-3]):[0-5]\\d$/.test(Hora)) {\r\n        errores.push(\"Formato de hora inválido (esperado HH:mm)\");\r\n      }\r\n\r\n      // Validar Pawwer\r\n      if (!Array.isArray(Pawwer) || Pawwer.length === 0) {\r\n        errores.push(\"No hay Pawwer asignado\");\r\n      }\r\n\r\n      if (errores.length > 0) {\r\n        console.warn(`⚠️ Registro inválido (ID: ${record.id}) para celular ${Celular}`); //TODO\r\n        errores.forEach((e) => console.warn(` - ${e}`));\r\n\r\n        try {\r\n          await updateLead(record.id, { Estado: \"onChange\" });\r\n          console.log(`🔁 Estado actualizado a 'onChange' para ID: ${record.id}`);\r\n\r\n          const mensaje = `Hola 👋, tu solicitud presenta errores:\\n\\n${errores\r\n            .map((e) => `• ${e}`)\r\n            .join(\"\\n\")}\\n\\nPor favor revisa la información ingresada.`;\r\n          await sendText(\"573332885462\", mensaje);\r\n          console.log(`📤 Mensaje de error enviado a ${Celular}`);\r\n        } catch (updateError) {\r\n          console.error(`❌ Error al actualizar estado o enviar mensaje:`, updateError);\r\n        }\r\n      } else {\r\n        console.log(`✅ Registro válido (ID: ${record.id}):`, record.fields);\r\n\r\n        try {\r\n          // Cambiar estado a \"validando\"\r\n          await updateLead(record.id, { Estado: \"validando\" });\r\n          console.log(`🔄 Estado actualizado a 'validando' para ID: ${record.id}`);\r\n\r\n          const nombreCliente = record.fields[\"Nombre cliente\"]; // Si tienes el nombre real, úsalo aquí\r\n          const nombrePerrito = record.fields.Perro || \"tu peludito\";\r\n          const direccionCompleta = record.fields.Direccion || \"\";\r\n          const [calle = \"No definida\", colonia = \"No definida\"] = direccionCompleta.split(\" – \");\r\n          const fecha = record.fields.Fecha || \"No definida\";\r\n          const hora = record.fields.Hora || \"No definida\";\r\n          const duracion = record.fields.TiempoServicio || \"No definido\";\r\n          const precio = `$${record.fields.Precio || 0}`;\r\n          const pawwer = record.fields[\"Nombre completo (from Pawwer)\"] || \"Pawwer\";\r\n          console.log(pawwer);\r\n          \r\n\r\n          await TEMPLATE_confirmacion_paseo_cliente(record.fields.Celular, {\r\n            nombreCliente,\r\n            nombrePerrito,\r\n            calle,\r\n            colonia,\r\n            fecha,\r\n            hora,\r\n            duracion,\r\n            precio,\r\n            pawwer,\r\n          });\r\n\r\n          // Obtener número del Pawwer desde el campo correcto\r\n          const pawwerNumeros = record.fields['Numero de teléfono (from Pawwer)'];\r\n          const pawwerName = record.fields['Nombre completo (from Pawwer)'] || 'Pawwer';\r\n          const pawwerNumero = Array.isArray(pawwerNumeros) ? pawwerNumeros[0] : null;\r\n\r\n          if (pawwerNumero) {\r\n            const mensajePawwer = `¡Hola ${pawwerName}! 🐾\\nTienes una nueva solicitud asignada para el ${Fecha} a las ${Hora}.`;\r\n            await sendText(pawwerNumero, mensajePawwer);\r\n            console.log(`📤 Mensaje enviado al Pawwer ${pawwerNumero}`);\r\n          } else {\r\n            console.warn(`⚠️ No se pudo enviar mensaje al Pawwer: número no disponible`);\r\n          }\r\n\r\n          const nuevoPaseoData = {\r\n            FechaCreacion: new Date().toISOString(),\r\n            Celular: record.fields.Celular,\r\n            Perro: record.fields.Perro,\r\n            Anotaciones: record.fields.Anotaciones || '',\r\n            Direccion: record.fields.Direccion,\r\n            TipoServicio: record.fields.TipoServicio,\r\n            TiempoServicio: record.fields.TiempoServicio,\r\n            Fecha: record.fields.Fecha,\r\n            Hora: record.fields.Hora,\r\n            Precio: record.fields.Precio,\r\n            Estado: \"Por realizarse\",\r\n            Pawwer: Array.isArray(record.fields.Pawwer)\r\n              ? record.fields.Pawwer\r\n              : record.fields.Pawwer\r\n                ? [record.fields.Pawwer]\r\n                : [],\r\n            \"metodo Pago\": record.fields[\"metodo Pago\"] || \"\",\r\n            \"Link Strava\": undefined,\r\n            \"Nombre cliente\": record.fields[\"Nombre cliente\"] || \"Cliente\",\r\n          };\r\n\r\n          await createPaseo(nuevoPaseoData);\r\n          console.log(`✅ Registro creado en Control de paseos para lead ID ${record.id}`);\r\n\r\n          await checkAndUpdatePaseoEstado(record.fields);\r\n\r\n          await deleteLead(record.id);\r\n          console.log(`🗑️ Lead eliminado con ID: ${record.id}`);\r\n\r\n        } catch (validError) {\r\n          console.error(`❌ Error al validar y notificar registro válido:`, validError);\r\n        }\r\n      }\r\n    }\r\n}\r\n\r\nsetInterval(checkLeadCount, 5 * 1000);\r\n\r\n\r\nconst init = addKeyword(EVENTS.WELCOME)\r\n  .addAction(async (ctx, { endFlow, gotoFlow }) => {\r\n    if (!ctx.body || typeof ctx.body !== \"string\") {\r\n      console.log(`[IGNORADO] Mensaje inválido o sin texto. Tipo: ${ctx.messageType}`);\r\n      return endFlow();\r\n    }\r\n\r\n    const nombre = ctx.pushName || \"Usuario\";\r\n    console.log(`[INIT] Usuario ${nombre} ha iniciado el flujo. Número: ${ctx.from}`);\r\n    const textoBoton = ctx.body;\r\n    const payloadBoton = ctx.payload || \"Sin payload\";\r\n    console.log(`[INTERACTION] Botón oprimido: ${textoBoton}, Payload: ${payloadBoton}`);\r\n\r\n    if (payloadBoton == \"\" && textoBoton == \"\") {\r\n      return endFlow();\r\n    }\r\n    \r\n    try {\r\n      const client = await getMongoClient();\r\n      const db = client.db(\"pawwi_bot\");\r\n      const usuarios = db.collection(\"usuarios\");\r\n\r\n      let usuario = await usuarios.findOne({ celular: ctx.from });\r\n\r\n      if (!usuario) {\r\n        const nuevoUsuario = {\r\n          celular: ctx.from,\r\n          nombre,\r\n          tipoUsuario: \"cliente\",\r\n          direccion: \"\",\r\n          perros: [],\r\n          agendamientos: 0,\r\n          creadoEn: new Date()\r\n        };\r\n\r\n        const res = await usuarios.insertOne(nuevoUsuario);\r\n        usuario = { ...nuevoUsuario, _id: res.insertedId };\r\n        console.log(\"✅ Usuario nuevo creado en Mongo\");\r\n      } else {\r\n        console.log(\"✅ Usuario recuperado de Mongo:\", usuario);\r\n\r\n        if (usuario.tipoUsuario == \"pawwer\") {\r\n          const paseo = await getPaseoByPawwerTelefonoActive(ctx.from);\r\n\r\n          if (!paseo) {\r\n            await sendText(ctx.from, \"No tienes paseos activos en este momento. Por favor, contacta al soporte si crees que es un error.\");\r\n            console.log('❌ No se encontró ningún paseo para este Pawwer con estado \"Esperando Pawwer\"');\r\n            return;\r\n          }\r\n\r\n          const paseoId = paseo.id;\r\n          const fields = paseo.fields;\r\n\r\n          const nombreCliente = Array.isArray(fields[\"Nombre cliente\"])? fields[\"Nombre cliente\"][0] || \"Cliente\": typeof fields[\"Nombre cliente\"] === \"string\"? fields[\"Nombre cliente\"]: \"Cliente\";\r\n          const nombrePawwer = Array.isArray(fields[\"Nombre completo (from Pawwer)\"])? fields[\"Nombre completo (from Pawwer)\"][0] || \"Pawwer\": typeof fields[\"Nombre completo (from Pawwer)\"] === \"string\"? fields[\"Nombre completo (from Pawwer)\"]: \"Pawwer\";\r\n          const nombrePerrito = fields.Perro || 'tu perrito';\r\n          const calle = fields.Direccion || 'Dirección';\r\n          const colonia = 'Colonia';        // Obtén de datos reales si tienes\r\n          const fecha = fields.Fecha || '';\r\n          const hora = fields.Hora || '';\r\n          const duracion = fields.TiempoServicio || '';\r\n          \r\n          if (paseo.fields.Estado == \"Esperando Pawwer\") {\r\n            if (ctx.payload !== \"confirmar_llegada\") {\r\n              await TEMPLATE_llegada_pawwer(paseo.fields[\"Numero de teléfono (from Pawwer)\"][0], { nombrePawwer, nombrePerrito });\r\n              return endFlow();\r\n            }\r\n            log(`Pawwer ${usuario.nombre} ha confirmado su llegada.`);\r\n\r\n            // 1. Actualizar estado a \"Esperando Strava\"\r\n            await updatePaseo(paseoId, { Estado: 'Esperando Strava' });\r\n            console.log(`✅ Estado del paseo ${paseoId} actualizado a \"Esperando Strava\"`);\r\n\r\n            // 2. Enviar plantilla al cliente (dueño del perrito)\r\n            await TEMPLATE_pawwer_llego_cliente(fields.Celular, {\r\n              nombreCliente,\r\n              nombrePawwer,\r\n              nombrePerrito,\r\n              calle,\r\n              colonia,\r\n              fecha,\r\n              hora,\r\n              duracion,\r\n            });\r\n\r\n            await TEMPLATE_strava_recordatorio_pawwer(ctx.from, {\r\n              nombrePawwer,\r\n              nombrePerrito,\r\n            });\r\n          }\r\n          else if (paseo.fields.Estado === \"Esperando Strava\") {\r\n            const linkRecibido = ctx.body.trim();\r\n\r\n            console.log(\"Link recibido:\", linkRecibido);\r\n\r\n            // Validar link Strava simple (https://www.strava.com/activities/ seguido de números)\r\n            const regexStrava = /^https:\\/\\/(www\\.)?strava\\.com\\/activities\\/\\d+$/;\r\n\r\n            if (!regexStrava.test(linkRecibido)) {\r\n              await sendText(ctx.from, \"Por favor, envía un link válido de Strava que tenga este formato:\\nhttps://www.strava.com/activities/123456789\");\r\n              return; // Esperar que el usuario envíe el link correcto\r\n            }\r\n\r\n            try {\r\n              await updatePaseo(paseo.id, {\r\n                Estado: \"Esperando finalizacion\",\r\n                \"Link Strava\": linkRecibido,\r\n              });\r\n\r\n              await sendText(ctx.from, \"¡Gracias! Hemos recibido tu link de Strava y se lo enviaremos al cliente.\");\r\n\r\n              // Enviar al cliente el link recibido\r\n              const celularCliente = paseo.fields.Celular;\r\n              const nombrePerrito = paseo.fields.Perro || \"tu perrito\";\r\n\r\n              await TEMPLATE_link_strava_cliente(celularCliente, {\r\n                nombreCliente,\r\n                nombrePerrito,\r\n                linkStrava: linkRecibido,\r\n              });\r\n\r\n            } catch (error) {\r\n              console.error(\"Error al actualizar paseo con link de Strava:\", error);\r\n              await sendText(ctx.from, \"Ocurrió un error al guardar tu link, por favor intenta de nuevo.\");\r\n            }\r\n          }\r\n          else if(\"Esperando finalizacion\" === paseo.fields.Estado) {\r\n            await sendText(ctx.from, \"Tienes actualmente un paseo en curso. Por favor, si deseas comentar alguna novedad o crees que es un error, contacta al numero de soporte +57 3332885462\");\r\n            \r\n          }\r\n          else if (paseo.fields.Estado === \"Esperando finalizacion de Pawwer\") {\r\n            if (ctx.payload !== \"Finalizar paseo\") {\r\n              await TEMPLATE_finalizar_paseo_pawwer(ctx.from, {\r\n                nombrePawwer, nombrePerrito});\r\n              return endFlow();\r\n            }\r\n            else {\r\n              await sendText(ctx.from, \"Gracias por finalizar el paseo. En breve el dueño recogera a su mascota\");\r\n              await TEMPLATE_paseo_finalizado_cliente(paseo.fields.Celular, {\r\n                nombreCliente,\r\n                nombrePerrito,\r\n              });\r\n              await TEMPLATE_recordatorio_pago_cliente(paseo.fields.Celular, {\r\n                nombreCliente,\r\n                nombrePerrito,\r\n                valorPaseo: paseo.fields.Precio?.toString() || \"No definido\"\r\n              });\r\n\r\n              await createCompletado({\r\n                FechaCreacion: paseo.fields.FechaCreacion,\r\n                Celular: paseo.fields.Celular,\r\n                Perro: paseo.fields.Perro,\r\n                Anotaciones: paseo.fields.Anotaciones,\r\n                Direccion: paseo.fields.Direccion,\r\n                TipoServicio: paseo.fields.TipoServicio,\r\n                TiempoServicio: paseo.fields.TiempoServicio,\r\n                Fecha: paseo.fields.Fecha,\r\n                Hora: paseo.fields.Hora,\r\n                Precio: paseo.fields.Precio,\r\n                Estado: paseo.fields.Estado,\r\n                Pawwer: paseo.fields.Pawwer,\r\n                \"metodo Pago\": paseo.fields[\"metodo Pago\"],\r\n                \"Nombre cliente\": paseo.fields[\"Nombre cliente\"],\r\n                \"Nombre pawwer\": Array.isArray(paseo.fields[\"Nombre completo (from Pawwer)\"])? paseo.fields[\"Nombre completo (from Pawwer)\"][0]: paseo.fields[\"Nombre completo (from Pawwer)\"] || \"No definido\",\r\n                \"Link Strava\": paseo.fields[\"Link Strava\"],\r\n              });\r\n\r\n\r\n              await deleteLead(paseo.id);\r\n            }\r\n          }\r\n          else{\r\n            console.log('Ocurrio un error');\r\n          }\r\n          return endFlow();\r\n        }\r\n        else if (usuario.tipoUsuario == \"support\") {\r\n          await sendText(ctx.from, `Hola ${nombre}, si lees esto es porque eres de soporte`);\r\n          return endFlow();\r\n        }\r\n      }\r\n\r\n      usuarioData[ctx.from] = usuario;\r\n\r\n      // Cargar los perros (si existen) en perritoData\r\n      for (const perro of usuario.perros || []) {\r\n        const perroId = `${ctx.from}_${perro.nombre}`;\r\n        perritoData[perroId] = { ...perro };\r\n      }\r\n\r\n    } catch (e) {\r\n      console.error(\"❌ Error al manejar usuario desde Mongo:\", e.message);\r\n    }\r\n\r\n    await TEMPLATE_bienvenida_pawwi(ctx.from, nombre);\r\n  })\r\n\r\n  .addAnswer(\r\n    null,\r\n    { capture: true },\r\n    async (ctx, { endFlow, gotoFlow }) => {\r\n      const textoBoton = ctx.body;\r\n      const payloadBoton = ctx.payload || \"Sin payload\";\r\n\r\n      console.log(`[INTERACTION] Botón oprimido: ${textoBoton}, Payload: ${payloadBoton}`);\r\n\r\n      if (payloadBoton === \"Registrar a mi perrito\") {\r\n        perritoData[ctx.from] = {};\r\n        return gotoFlow(RegistrarNombrePerrito);\r\n      }\r\n\r\n      else if (payloadBoton === \"Agendar un paseo\") {\r\n        if (!usuarioData[ctx.from] || !usuarioData[ctx.from].perros || usuarioData[ctx.from].perros.length === 0) {\r\n          return gotoFlow(RegistrarNombrePerrito);\r\n        } else {\r\n          return gotoFlow(AgendarlistarPerritos);\r\n        }\r\n      }\r\n\r\n      else if (payloadBoton === \"Hablar con el equipo\") {\r\n        await sendText(ctx.from, `En unos instantes nuestro Pawwier de soporte se comunicara contigo. O puedes comunicarte al número +57 3332885462`);\r\n        await sendText('573332885462', `El usuario ${ctx.from} ha solicitado hablar con el equipo de soporte.`);\r\n        return endFlow();\r\n      }\r\n\r\n      else if (payloadBoton === \"Conviértete en Pawwer\") {\r\n        await sendText(ctx.from, `Perfecto, para ser un Pawwer, completa el siguiente formulario: https://tally.so/r/wMyVRE`);\r\n        return endFlow();\r\n      }\r\n\r\n      else {\r\n        return gotoFlow(init);\r\n      }\r\n    }\r\n  );\r\n\r\nconst RegistrarNombrePerrito = addKeyword('RegistrarNombrePerrito')\r\n  .addAction(async (ctx) => {\r\n      await TEMPLATE_registro_nombre_perrito(ctx.from);\r\n  })\r\n  .addAnswer('', { capture: true })\r\n  .addAction(async (ctx, { gotoFlow }) => {\r\n      const nombre = ctx.body.trim();\r\n      if (!regex(nombre)) {\r\n        await sendText(ctx.from, `Por favor, responde solo con el nombre\r\nde tu perrito, sin números, símbolos\r\nni emojis.\r\nEjemplo: Max, Luna, Toby.`);\r\n        return gotoFlow(init);\r\n      }\r\n      perritoData[ctx.from] = perritoData[ctx.from] || {};\r\n      perritoData[ctx.from].nombre = nombre;\r\n      return gotoFlow(RegistrarRazaPerrito);\r\n  });\r\n\r\nconst RegistrarRazaPerrito = addKeyword('RegistrarRazaPerrito')\r\n  .addAction(async (ctx) => {\r\n      await TEMPLATE_registro_raza_perrito(ctx.from, perritoData[ctx.from]?.nombre || \"\");\r\n  })\r\n  .addAnswer('', { capture: true })\r\n  .addAction(async (ctx, { gotoFlow }) => {\r\n      const raza = ctx.body.trim();\r\n      if (!regex(raza)) {\r\n        await sendText(ctx.from, `Por favor, responde solo con la raza de tu perrito, sin números, símbolos ni emojis.\r\nEjemplo: Husky, Pitbull, criollo.`);\r\n        return gotoFlow(init);\r\n      }\r\n      perritoData[ctx.from].raza = raza;\r\n      return gotoFlow(RegistrarEdadPerrito);\r\n  });\r\n\r\nconst RegistrarEdadPerrito = addKeyword('RegistrarEdadPerrito')\r\n  .addAction(async (ctx) => {\r\n      await TEMPLATE_registro_edad_perrito(ctx.from, perritoData[ctx.from]?.nombre || \"\");\r\n  })\r\n  .addAnswer('', { capture: true })\r\n  .addAction(async (ctx, { gotoFlow }) => {\r\n      const edad = ctx.body.trim();\r\n      perritoData[ctx.from].edad = edad;\r\n      return gotoFlow(RegistrarConsideracionesPerrito);\r\n  });\r\n\r\nconst RegistrarConsideracionesPerrito = addKeyword('RegistrarConsideracionesPerrito')\r\n  .addAction(async (ctx) => {\r\n      await TEMPLATE_registro_consideraciones_perrito(ctx.from, perritoData[ctx.from]?.nombre || \"\");\r\n  })\r\n  .addAnswer('', { capture: true })\r\n  .addAction(async (ctx, { gotoFlow }) => {\r\n      const consideraciones = ctx.body.trim();\r\n      perritoData[ctx.from].consideraciones = consideraciones;\r\n      return gotoFlow(RegistrarVacunasPerrito);\r\n  });\r\n\r\nconst RegistrarVacunasPerrito = addKeyword('RegistrarVacunasPerrito')\r\n  .addAction(async (ctx) => {\r\n      await TEMPLATE_registro_vacunas_perrito(ctx.from, perritoData[ctx.from]?.nombre || \"\");\r\n  })\r\n  .addAnswer('', { capture: true })\r\n  .addAction(async (ctx, { gotoFlow }) => {\r\n      //const vacunas = ctx.body.trim();\r\n      const textoBoton = ctx.body;\r\n      const payloadBoton = ctx.payload || \"Sin payload\";\r\n      console.log(`[INTERACTION] Botón oprimido: ${textoBoton}, Payload: ${payloadBoton}`);\r\n      if (payloadBoton === \"VACUNAS_SI\") {\r\n        perritoData[ctx.from].vacunas = true;\r\n        return gotoFlow(RegistrarPerro);\r\n      } \r\n      else if (payloadBoton === \"VACUNAS_NO\") {\r\n        perritoData[ctx.from].vacunas = false;\r\n        return gotoFlow(init);\r\n      }\r\n      else {\r\n        await sendText(ctx.from, `Por favor, selecciona una opción válida.`);\r\n        return gotoFlow(RegistrarVacunasPerrito);\r\n      }\r\n      \r\n  });\r\n\r\nconst RegistrarDireccion = addKeyword('RegistrarDireccion')\r\n  .addAction(async (ctx) => {\r\n    await sendText(ctx.from, `📍 ¿Cuál es la dirección exacta donde recogeremos a tus peluditos?.`);\r\n  })\r\n  .addAnswer('', { capture: true })\r\n  .addAction(async (ctx, { gotoFlow }) => {\r\n    const direccion = ctx.body.trim();\r\n\r\n    if (!direccion || direccion.length < 10) {\r\n      await sendText(ctx.from, `🚫 La dirección parece muy corta o incompleta.`);\r\n      return gotoFlow(RegistrarDireccion);\r\n    }\r\n\r\n    usuarioData[ctx.from].Direccion = direccion;\r\n\r\n    try {\r\n      await updateUsuarioDireccion(ctx.from, direccion);\r\n    } catch (e) {\r\n      console.error(\"Error actualizando dirección en Mongo\", e?.message || e);\r\n    }\r\n\r\n    return gotoFlow(agendarMetodoPaseo);\r\n  });\r\n\r\n\r\nconst RegistrarPerro = addKeyword('RegistrarPerro')\r\n  .addAction(async (ctx) => {\r\n    const data = perritoData[ctx.from];\r\n    try {\r\n      await insertarPerro(ctx.from, data);\r\n    } catch (e) {\r\n      console.error(\"❌ Error guardando perro en Mongo:\", e.message);\r\n    }\r\n    await TEMPLATE_registro_agendar_paseo(ctx.from, perritoData[ctx.from]?.nombre || \"\");\r\n  })\r\n  .addAnswer('', { capture: true })\r\n  .addAction(async (ctx, { gotoFlow }) => {\r\n    usuarioData[ctx.from].perroSeleccionado = perritoData[ctx.from];\r\n    return gotoFlow(agendarTiempoPaseo);\r\n  });\r\n\r\n\r\nconst AgendarlistarPerritos = addKeyword('AgendarlistarPerritos')\r\n  .addAction(async (ctx) => {\r\n    const currentUser = usuarioData[ctx.from];\r\n\r\n    if (!currentUser || !currentUser.perros || currentUser.perros.length === 0) {\r\n      await sendText(ctx.from, \"No tienes perritos registrados.\\n\\nSi deseas registrar un nuevo perrito, por favor selecciona la opción correspondiente en el menú principal.\");\r\n      return;\r\n    }\r\n\r\n    const perrosRegistrados = currentUser.perros; // Use the dogs from the user object\r\n\r\n    // 2. Create buttons from the registered dogs\r\n    const buttons = perrosRegistrados.map(perro => ({\r\n      // Assuming 'nombre' is the property for the dog's name in your Perro interface\r\n      body: perro.nombre,\r\n      payload: perro.nombre // Use the dog's name as payload for selection\r\n    }));\r\n\r\n    await sendButtons(ctx.from, \"¿A quien vamos a pasear hoy?\", buttons);\r\n  })\r\n  .addAnswer('', { capture: true })\r\n  .addAction(async (ctx, { gotoFlow }) => {\r\n    const selectedDogName = ctx.body; // The user's response will be the dog's name from the button\r\n    const currentUser = usuarioData[ctx.from];\r\n\r\n    // 3. Find the selected dog in the user's registered dogs\r\n    const perroSeleccionado = currentUser.perros.find(\r\n      (perro) => perro.nombre === selectedDogName\r\n    );\r\n\r\n    if (perroSeleccionado) {\r\n      // --- ADD THIS CONSOLE.LOG HERE ---\r\n      console.log(\"------------------------------------\");\r\n      console.log(\"Perro seleccionado por el usuario:\");\r\n      console.log(\"Nombre:\", perroSeleccionado.nombre);\r\n      console.log(\"Raza:\", perroSeleccionado.raza);\r\n      console.log(\"Edad:\", perroSeleccionado.edad);\r\n      console.log(\"Consideraciones:\", perroSeleccionado.consideraciones);\r\n      console.log(\"Vacunas:\", perroSeleccionado.vacunas);\r\n      console.log(\"------------------------------------\");\r\n      // --- END CONSOLE.LOG ADDITION ---\r\n\r\n      // 4. Store the selected dog in usuarioData for later use\r\n      currentUser.perroSeleccionado = perroSeleccionado;\r\n      usuarioData[ctx.from] = currentUser; // Update the global usuarioData\r\n\r\n      return gotoFlow(agendarTiempoPaseo);\r\n    } else {\r\n      await sendText(ctx.from, `Por favor, selecciona un perrito válido de la lista.`);\r\n      return gotoFlow(AgendarlistarPerritos); // Go back to list dogs if invalid selection\r\n    }\r\n  });\r\n\r\nconst agendarTiempoPaseo = addKeyword('agendarTiempoPaseo')\r\n  .addAction(async (ctx) => {\r\n    // Usa la plantilla con el nombre del perrito seleccionado\r\n    const nombrePerro = usuarioData[ctx.from]?.perroSeleccionado?.Nombre || \"tu peludito\";\r\n    await TEMPLATE_agendar_tipo_paseo(ctx.from, nombrePerro);\r\n  })\r\n  .addAnswer('', { capture: true })\r\n  .addAction(async (ctx, { gotoFlow }) => {\r\n    const payloadBoton = ctx.payload || \"\";\r\n    let agendamiento = '';\r\n    let precio = 0;\r\n    console.log(`[INTERACTION] Payload recibido: ${payloadBoton}`);\r\n\r\n    switch (payloadBoton) {\r\n      case 'FLASH_15_MIN':\r\n        agendamiento = '15 minutos';\r\n        precio = 7500;\r\n        break;\r\n      case 'CHILL_30_MIN':\r\n        agendamiento = '30 minutos';\r\n        precio = 10000;\r\n        break;\r\n      case 'ADVENTURE_1_HORA':\r\n        agendamiento = '60 minutos';\r\n        precio = 17000;\r\n        break;\r\n      default:\r\n        await sendText(ctx.from, 'Por favor, selecciona una opción válida usando los botones.');\r\n        return gotoFlow(agendarTiempoPaseo);\r\n    }\r\n\r\n    if (!usuarioData[ctx.from]) usuarioData[ctx.from] = {};\r\n    usuarioData[ctx.from].agendamientoSeleccionado = agendamiento;\r\n    usuarioData[ctx.from].valor = precio;\r\n\r\n    return gotoFlow(agendarDiaPaseo);\r\n  });\r\n\r\nconst agendarDiaPaseo = addKeyword('agendarDiaPaseo')\r\n  .addAction(async (ctx) => {\r\n    const nombrePerro = usuarioData[ctx.from]?.perroSeleccionado?.Nombre || \"tu peludito\";\r\n    await TEMPLATE_agendar_fecha_paseo(ctx.from, nombrePerro);\r\n  })\r\n  .addAnswer('', { capture: true })\r\n  .addAction(async (ctx, { gotoFlow }) => {\r\n    const diaSeleccionado = ctx.body.trim();\r\n\r\n    usuarioData[ctx.from].diaSeleccionado = diaSeleccionado;\r\n\r\n    return gotoFlow(agendarHoraPaseo);\r\n  });\r\n\r\nconst agendarHoraPaseo = addKeyword('agendarHoraPaseo')\r\n  .addAction(async (ctx) => {\r\n    const nombrePerro = usuarioData[ctx.from]?.perroSeleccionado?.Nombre || \"tu peludito\";\r\n    await TEMPLATE_ragendar_hora_paseo(ctx.from, nombrePerro);\r\n  })\r\n  .addAnswer('', { capture: true })\r\n  .addAction(async (ctx, { gotoFlow }) => {\r\n    const horaSeleccionado = ctx.body.trim();\r\n\r\n    usuarioData[ctx.from] ??= {};\r\n    usuarioData[ctx.from].horaSeleccionada = horaSeleccionado;\r\n\r\n    if (usuarioData[ctx.from].Direccion === undefined || usuarioData[ctx.from].Direccion === \"\") {\r\n        //await sendText(ctx.from, \"Por favor, primero registra la dirección donde recogeremos a tu peludito.\");\r\n        return gotoFlow(RegistrarDireccion);\r\n    }\r\n    else {\r\n      return gotoFlow(agendarMetodoPaseo);\r\n    }\r\n  });\r\n\r\n//Metodo de pago\r\nconst agendarMetodoPaseo = addKeyword('agendarMetodoPaseo')\r\n  .addAction(async (ctx) => {\r\n    const nombrePerro = usuarioData[ctx.from]?.perroSeleccionado?.Nombre || \"tu peludito\";\r\n    await TEMPLATE_agendar_metodo_pago(ctx.from, nombrePerro);\r\n  })\r\n  .addAnswer('', { capture: true })\r\n  .addAction(async (ctx, { gotoFlow }) => {\r\n    const metodo = ctx.body.trim().toLowerCase();\r\n\r\n    usuarioData[ctx.from] ??= {};\r\n    usuarioData[ctx.from].metodoPago = metodo;\r\n\r\n    return gotoFlow(agendarResumenPaseo); // o el flujo siguiente que uses\r\n  });  \r\n\r\nconst agendarResumenPaseo = addKeyword('agendarResumenPaseo')\r\n  .addAction(async (ctx) => {\r\n    const data: Usuario = usuarioData[ctx.from];\r\n    const selectedDog = data.perroSeleccionado; // Get the selected dog object for easier access\r\n\r\n    await TEMPLATE_agendar_resumen_paseo(ctx.from, {\r\n      dogName: selectedDog?.nombre || 'No definido', // Use .nombre\r\n      calle: data.Direccion?.split(' – ')[0] || 'No definida',\r\n      colonia: data.Direccion?.split(' – ')[1] || 'No definida',\r\n      fecha: data.diaSeleccionado || 'No definida',\r\n      hora: data.horaSeleccionada || 'No definida',\r\n      tipoPaseo: data.agendamientoSeleccionado || 'No definido',\r\n      precio: `$${data.valor || 0}`,\r\n      metodoPago: data.metodoPago || 'No definido'\r\n    });\r\n  })\r\n  .addAnswer('', { capture: true })\r\n  .addAction(async (ctx, { endFlow, gotoFlow }) => {\r\n    const textoBoton = ctx.body;\r\n    const payloadBoton = ctx.payload || '';\r\n    if (textoBoton === 'Si' || payloadBoton === 'SI') {\r\n      try {\r\n        const data: Usuario = usuarioData[ctx.from];\r\n        const selectedDog = data.perroSeleccionado; // Get the selected dog object\r\n\r\n        await createLead({\r\n          FechaCreacion: new Date().toISOString(),\r\n          Celular: ctx.from,\r\n          \"Nombre cliente\": ctx.pushName || 'Usuario',\r\n          Perro: selectedDog?.nombre ?? 'No definido',\r\n          Anotaciones: `Raza: ${selectedDog?.raza ?? 'No definida'}, Edad: ${selectedDog?.edad ?? 'No definida'}, Consideraciones: ${selectedDog?.consideraciones ?? 'No definidas'}, Vacunas: ${selectedDog?.vacunas !== undefined ? (selectedDog.vacunas ? 'Sí' : 'No') : 'No definida'}`,\r\n          Direccion: data.Direccion ?? 'No definida',\r\n          TipoServicio: 'paseo',\r\n          TiempoServicio: data.agendamientoSeleccionado ?? 'No definido',\r\n          Fecha: data.diaSeleccionado ?? 'No definida',\r\n          Hora: data.horaSeleccionada ?? 'No definida',\r\n          Precio: data.valor ?? 0,\r\n          Estado: 'Pendiente',\r\n          Pawwer: '',\r\n          \"metodo Pago\": data.metodoPago ?? 'No especificado'\r\n        });\r\n\r\n\r\n        await createLeadMongo({\r\n          celular: ctx.from,\r\n          perro: selectedDog?.nombre || 'No definido', // Ensure .nombre is used\r\n          // --- MODIFICATION HERE: Use lowercase properties and add nullish coalescing ---\r\n          anotaciones: `Raza: ${selectedDog?.raza || 'No definida'}, Edad: ${selectedDog?.edad || 'No definida'}, Consideraciones: ${selectedDog?.consideraciones || 'No definidas'}, Vacunas: ${selectedDog?.vacunas !== undefined ? (selectedDog.vacunas ? 'Sí' : 'No') : 'No definida'}`,\r\n          // --- END MODIFICATION ---\r\n          direccion: data.Direccion || 'No definida', // Add fallback\r\n          tipoServicio: 'paseo',\r\n          tiempoServicio: data.agendamientoSeleccionado || 'No definido', // Add fallback\r\n          fecha: data.diaSeleccionado || 'No definida', // Add fallback\r\n          hora: data.horaSeleccionada || 'No definida', // Add fallback\r\n          precio: data.valor || 0, // Add fallback\r\n          estado: 'Pendiente',\r\n          pawwer: 'No asignado',\r\n          metodoPago: data.metodoPago || 'No especificado' // Add fallback\r\n        });\r\n\r\n        await sendText(ctx.from, `En unos instantes nuestro Equipo de Pawwi se estará comunicando contigo para confirmar el paseo 🐶\r\nSi tienes dudas con tu servicio, o quieres comentar una novedad, contáctate con nuestro Pawwer de soporte +57 3023835152`);\r\n        await sendText('573332885462', `🔔 Lead nuevo registrado desde el bot.\r\n          \r\nNombre: ${ctx.pushName || 'Usuario'} \r\nPerro: ${selectedDog?.nombre || 'No definido'}\r\nAnotaciones: \r\n  Raza: ${selectedDog?.raza || 'No definida'}, \r\n  Edad: ${selectedDog?.edad || 'No definida'}, \r\n  Consideraciones: ${selectedDog?.consideraciones || 'No definidas'}, \r\n  Vacunas: ${selectedDog?.vacunas !== undefined ? (selectedDog.vacunas ? 'Sí' : 'No') : 'No definida'}\r\n  Dirección: ${data.Direccion || 'No definida'}\r\n  Tiempo de servicio: ${data.agendamientoSeleccionado || 'No definido'}\r\nFecha: ${data.diaSeleccionado || 'No definida'}\r\nHora: ${data.horaSeleccionada || 'No definida'}\r\nPrecio: $${data.valor * 0.6 || 0}`);\r\n      } catch (e) {\r\n        await sendText(ctx.from, `Ocurrió un error al guardar el agendamiento.`);\r\n        console.error(\"Error al crear el lead:\", e?.message || e);\r\n      }\r\n      return endFlow();\r\n    } else if (textoBoton === 'No' || payloadBoton === 'NO') {\r\n      await sendText(ctx.from, `Por favor, vuelve a intentar agendar el paseo.`);\r\n      return gotoFlow(init);\r\n    } else {\r\n      await sendText(ctx.from, `Por favor, selecciona una opción válida.`);\r\n      return gotoFlow(agendarResumenPaseo);\r\n    }\r\n  });\r\n\r\nexport { init, RegistrarNombrePerrito, RegistrarRazaPerrito, RegistrarEdadPerrito, RegistrarConsideracionesPerrito, RegistrarVacunasPerrito, RegistrarDireccion, RegistrarPerro, AgendarlistarPerritos, agendarTiempoPaseo, agendarDiaPaseo, agendarHoraPaseo, agendarMetodoPaseo, agendarResumenPaseo};\r\n\r\n\r\n//TODO: Revisar BDD para enviar confirmacion a cliente y a paseador\r\n\r\n//TODO: Revisar BDD para enviar recordatorio 1 hora antes del paseo\r\n\r\n//TODO: Flujo de pawwer dividido con el del cliente\r\n\r\n//Notas:\r\n","import { createFlow } from \"@builderbot/bot\";\r\nimport dotenv from 'dotenv';\r\ndotenv.config();\r\n\r\nimport {\r\n    init, RegistrarNombrePerrito, RegistrarRazaPerrito, RegistrarEdadPerrito, RegistrarConsideracionesPerrito, RegistrarVacunasPerrito, RegistrarDireccion, RegistrarPerro, AgendarlistarPerritos, agendarTiempoPaseo, agendarDiaPaseo, agendarHoraPaseo, agendarMetodoPaseo, agendarResumenPaseo\r\n} from \"./mainFlow\";\r\n\r\nexport default createFlow([\r\n    init, RegistrarNombrePerrito, RegistrarRazaPerrito, RegistrarEdadPerrito, RegistrarConsideracionesPerrito, RegistrarVacunasPerrito, RegistrarDireccion, RegistrarPerro, AgendarlistarPerritos, agendarTiempoPaseo, agendarDiaPaseo, agendarHoraPaseo, agendarMetodoPaseo, agendarResumenPaseo\r\n]);\r\n","import \"dotenv/config\";\r\n\r\nexport const config = {\r\n  PORT: process.env.PORT ?? 3008,\r\n  //Meta\r\n  jwtToken: process.env.jwtToken,\r\n  numberId: process.env.numberId,\r\n  verifyToken: process.env.verifyToken,\r\n  version: \"v20.0\"\r\n};\r\n","import { MetaProvider as Provider } from \"@builderbot/provider-meta\";\r\nimport { createProvider } from \"@builderbot/bot\";\r\nimport { config } from \"../config\";\r\n\r\nexport const provider = createProvider(Provider, {\r\n  jwtToken: config.jwtToken,\r\n  numberId: config.numberId,\r\n  verifyToken: config.verifyToken,\r\n  version: config.version,\r\n});\r\n","import { createBot } from '@builderbot/bot'\r\nimport { MemoryDB as Database } from '@builderbot/bot'\r\nimport template from './template'\r\nimport { provider } from './provider'\r\nimport dotenv from 'dotenv'\r\ndotenv.config()\r\n\r\nconst PORT = process.env.PORT ?? 3008\r\n\r\nconst main = async () => {\r\n    const { httpServer } = await createBot({\r\n        flow: template,\r\n        provider: provider,\r\n        database: new Database(),\r\n    })\r\n\r\n    httpServer(+PORT)\r\n}\r\n\r\nmain()\r\n"],"names":["MongoClient","ServerApiVersion","AIRTABLE_BASE","AIRTABLE_TOKEN","addKeyword","EVENTS","log","createFlow","createProvider","Provider","createBot","Database"],"mappings":"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"}